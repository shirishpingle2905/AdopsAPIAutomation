<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="QA-Adops-API-Test-Automation" resourceRoot="${workspaceDir}" soapui-version="5.0.0" abortOnError="false" runType="SEQUENTIAL" defaultScriptLanguage="Groovy" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="&lt;all>"/>
  <con:entry key="Report to Generate" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="soapui-setings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value="C:\Program Files\SmartBear\soapUI-4.5.0\bin"/>
  <con:entry key="Tool Args" value="> D:\QA-Adops-API-Test-Automation\QA-Adops-API-Test-Automation-Result\QAAdopsAPITestAutomation_TestSuite-Summary.txt"/>
  <con:entry key="Ignore Errors" value="true"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="true"/>
  <con:entry key="Enable UI" value="true"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="true"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Export All" value="true"/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Print Report" value="true"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value="D:\QA-Adops-API-Test-Automation\QA-Adops-API-Test-Automation-Result"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="true"/>
  <con:entry key="Endpoint" value="http://adops1007.qa.sharethis.com/"/>
</xml-fragment>]]></con:setting>
  </con:settings>
  <con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Authentication Service" type="rest" basePath="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:definitionCache type="TEXT" rootPart=""/><con:endpoints>
      <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
    </con:endpoints>
    <con:resource name="Authentication" path="/REST/auth/">
      <con:settings/>
      <con:parameters/>
      <con:method name="Get Authentication Method" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">true</con:setting>
        </con:settings>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>text/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>text/plain</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Get Authentication Request" mediaType="application/xml" accept="">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
  </con:interface>
  <con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Account Service - Check By Account ID" type="rest" basePath="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:definitionCache type="TEXT" rootPart=""/><con:endpoints>
      <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
    </con:endpoints>
    <con:resource name="ACCOUNT_ID" path="/REST/account/21">
      <con:settings/>
      <con:parameters/>
      <con:method name="Get Account ID Method" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">true</con:setting>
        </con:settings>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>text/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>text/plain</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Get Account ID Request" mediaType="application/xml" accept="">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="ACCOUNT_Name" path="/REST/account/">
      <con:settings/>
      <con:parameters>
        <con:parameter>
          <con:name>account.name</con:name>
          <con:value>mobile</con:value>
          <con:style>QUERY</con:style>
          <con:default>mobile</con:default>
        </con:parameter>
      </con:parameters>
      <con:method name="Get Account Name Method" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">true</con:setting>
        </con:settings>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>text/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE"><con:mediaType>text/plain</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Get Account Name Request" mediaType="application/xml" accept="">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <entry key="account.name" value="Sony_Mobile" xmlns="http://eviware.com/soapui/config"/>
          </con:parameters>
        </con:request>
      </con:method>
    </con:resource>
  </con:interface>
  <con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Opportunity Service" type="rest" basePath="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:definitionCache type="TEXT" rootPart=""/><con:endpoints>
      <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
    </con:endpoints>
    <con:resource name="OPPORTUNITY_ID" path="/REST/opportunity/10">
      <con:settings/>
      <con:parameters/>
      <con:method name="Get Opportunity ID Method" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">true</con:setting>
        </con:settings>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>text/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>text/plain</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Get Opportunity ID Request" mediaType="application/xml" accept="">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="OPPORTUNITY_NAME" path="/REST/opportunity/">
      <con:settings/>
      <con:parameters>
        <con:parameter>
          <con:name>opportunity.name</con:name>
          <con:value>Boat</con:value>
          <con:style>QUERY</con:style>
          <con:default>Boat</con:default>
        </con:parameter>
      </con:parameters>
      <con:method name="Get Opportunity Name Method" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">true</con:setting>
        </con:settings>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>text/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>text/plain</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:request name="Get Opportunity Name Request" mediaType="application/xml" accept="">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="OPPORTUNITY_ACCOUNTID" path="/REST/opportunity/">
      <con:settings/>
      <con:parameters>
        <con:parameter>
          <con:name>opportunity.accountId</con:name>
          <con:value>001A000000dcnEnIAI</con:value>
          <con:style>QUERY</con:style>
          <con:default>001A000000dcnEnIAI</con:default>
        </con:parameter>
      </con:parameters>
      <con:method name="Get Opportunity AccountID Method" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">true</con:setting>
        </con:settings>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>text/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>text/plain</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:request name="Get Opportunity AccountID Request" mediaType="application/xml" accept="">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
  </con:interface>
  <con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Campaign Group Service" type="rest" basePath="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:definitionCache type="TEXT" rootPart=""/><con:endpoints>
      <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
    </con:endpoints>
    <con:resource name="Campaign Group ID" path="/REST/campaign_group/{param0}">
      <con:settings/>
      <con:parameters>
        <con:parameter>
          <con:name>param0</con:name>
          <con:value>100</con:value>
          <con:style>TEMPLATE</con:style>
          <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
          <con:default>100</con:default>
          <con:path xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:parameter>
      </con:parameters>
      <con:method name="Get Campaign Group ID Method" method="GET">
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>text/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>text/plain</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Get Campaign Group ID Request" mediaType="application/xml" accept="">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="Campaign_Group_Name" path="/REST/campaign_group/">
      <con:settings/>
      <con:parameters>
        <con:parameter>
          <con:name>campaignGroup.name</con:name>
          <con:value>BatCarnival</con:value>
          <con:style>QUERY</con:style>
          <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
          <con:default>BatCarnival</con:default>
          <con:path xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:parameter>
      </con:parameters>
      <con:method name="Get Campaign Group Name Method" method="GET">
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>text/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>text/plain</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:request name="Get Campaign Group Name Request" mediaType="application/xml" accept="">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <entry key="campaignGroup.name" value="BatCarnival" xmlns="http://eviware.com/soapui/config"/>
          </con:parameters>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="Campaign_Group.ID" path="/REST/campaign_group/">
      <con:settings/>
      <con:parameters>
        <con:parameter>
          <con:name>campaignGroup.id</con:name>
          <con:value>10</con:value>
          <con:style>QUERY</con:style>
          <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
          <con:default>10</con:default>
          <con:path xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:parameter>
      </con:parameters>
      <con:method name="Get Campaign_Group.ID Method" method="GET">
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>text/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>text/plain</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:request name="Get Campaign_Group.ID Request" mediaType="application/xml" accept="">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <entry key="campaignGroup.name" value="BatCarnival" xmlns="http://eviware.com/soapui/config"/>
          </con:parameters>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="Campaign_Group.ThirdPartyOppId" path="/REST/campaign_group/">
      <con:settings/>
      <con:parameters>
        <con:parameter>
          <con:name>campaignGroup.thirdPartyOppId</con:name>
          <con:value>006F000000GGeCDIA1</con:value>
          <con:style>QUERY</con:style>
          <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
          <con:default>006F000000GGeCDIA1</con:default>
          <con:path xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:parameter>
      </con:parameters>
      <con:method name="Get Campaign_Group.ThirdPartyOppId Method" method="GET">
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>text/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>text/plain</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:request name="Get Campaign_Group.ThirdPartyOppId Request" mediaType="application/xml" accept="">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <entry key="campaignGroup.name" value="BatCarnival" xmlns="http://eviware.com/soapui/config"/>
          </con:parameters>
        </con:request>
      </con:method>
    </con:resource>
  </con:interface>
  <con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Campaign Service" type="rest" basePath="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:definitionCache type="TEXT" rootPart=""/><con:endpoints>
      <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
    </con:endpoints>
    <con:resource name="Campaign_ID" path="/REST/campaign/{param0}">
      <con:settings/>
      <con:parameters>
        <con:parameter>
          <con:name>param0</con:name>
          <con:value>150</con:value>
          <con:style>TEMPLATE</con:style>
          <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
          <con:default>150</con:default>
          <con:path xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:parameter>
      </con:parameters>
      <con:method name="Get Campaign_ID Method" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">true</con:setting>
        </con:settings>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>text/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>text/plain</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:request name="Get Campaign_ID Request" mediaType="application/xml" accept="">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="Campaign.ID" path="/REST/campaign/">
      <con:settings/>
      <con:parameters>
        <con:parameter>
          <con:name>campaign.id</con:name>
          <con:value>151</con:value>
          <con:style>QUERY</con:style>
          <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
          <con:default>151</con:default>
          <con:path xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:parameter>
      </con:parameters>
      <con:method name="Get Campaign.ID Method" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">true</con:setting>
        </con:settings>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>text/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>text/plain</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:request name="Get Campaign.ID Request" mediaType="application/xml" accept="">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="Campaign.CampaignGroupId" path="/REST/campaign/">
      <con:settings/>
      <con:parameters>
        <con:parameter>
          <con:name>campaign.campaignGroupId</con:name>
          <con:value>92</con:value>
          <con:style>QUERY</con:style>
          <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
          <con:default>92</con:default>
          <con:path xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:parameter>
      </con:parameters>
      <con:method name="Get Campaign.CampaignGroupId Method" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">true</con:setting>
        </con:settings>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>text/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>text/plain</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:request name="Get Campaign.CampaignGroupId Request" mediaType="application/xml" accept="">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <entry key="campaign.campaignGroupId" value="92" xmlns="http://eviware.com/soapui/config"/>
          </con:parameters>
        </con:request>
      </con:method>
    </con:resource>
  </con:interface>
  <con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="AdGroup Service" type="rest" basePath="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:definitionCache type="TEXT" rootPart=""/><con:endpoints>
      <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
    </con:endpoints>
    <con:resource name="Get AdGroupID" path="/REST/adgroup/{param0}">
      <con:settings/>
      <con:parameters>
        <con:parameter>
          <con:name>param0</con:name>
          <con:value>600</con:value>
          <con:style>TEMPLATE</con:style>
          <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
          <con:default>600</con:default>
          <con:path xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:parameter>
      </con:parameters>
      <con:method name="Get AdGroupID Method" method="GET">
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>text/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>text/plain</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>text/html</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>html</con:element>
        </con:representation>
        <con:request name="Get AdGroupID Request" mediaType="application/xml" accept="">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="Get AdGroup.CampaignID" path="/REST/adgroup/">
      <con:settings/>
      <con:parameters>
        <con:parameter>
          <con:name>adgroup.campaignId</con:name>
          <con:value>600</con:value>
          <con:style>QUERY</con:style>
          <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
          <con:default>600</con:default>
          <con:path xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:parameter>
      </con:parameters>
      <con:method name="Get ADGroup.CampaignID Method" method="GET">
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>text/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>text/plain</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>text/html</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>html</con:element>
        </con:representation>
        <con:request name="Get ADGroup.CampaignID Request" mediaType="application/xml" accept="">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
  </con:interface>
  <con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Audience Service" type="rest" basePath="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:definitionCache type="TEXT" rootPart=""/><con:endpoints>
      <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
    </con:endpoints>
    <con:resource name="INDEX" path="/REST/audience/{param0}">
      <con:settings/>
      <con:parameters>
        <con:parameter>
          <con:name>param0</con:name>
          <con:value>18752</con:value>
          <con:style>TEMPLATE</con:style>
          <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
          <con:default>18752</con:default>
          <con:path xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:parameter>
      </con:parameters>
      <con:method name="Get Index Method" method="GET">
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>text/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>text/plain</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:request name="Get Index Request" mediaType="application/xml" accept="">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <entry key="param0" value="18752" xmlns="http://eviware.com/soapui/config"/>
          </con:parameters>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="Audience.RTName" path="/REST/audience/">
      <con:settings/>
      <con:parameters>
        <con:parameter>
          <con:name>audience.rtName</con:name>
          <con:value>'GJ'</con:value>
          <con:style>QUERY</con:style>
          <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
          <con:default>'GJ'</con:default>
          <con:path xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:parameter>
      </con:parameters>
      <con:method name="Get Audience.RTName Method" method="GET">
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>text/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>text/plain</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:request name="Get Audience.RTName Request" mediaType="application/xml" accept="">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="audience.rtName" value="'GJ'"/>
            <con:entry key="param0" value="18752"/>
          </con:parameters>
        </con:request>
      </con:method>
    </con:resource>
  </con:interface>
  <con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Report Service" type="rest" basePath="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:definitionCache type="TEXT" rootPart=""/><con:endpoints>
      <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
    </con:endpoints>
    <con:resource name="SocialLift" path="/REST/report/socialLift/{param0}">
      <con:settings/>
      <con:parameters>
        <con:parameter>
          <con:name>param0</con:name>
          <con:value>116</con:value>
          <con:style>TEMPLATE</con:style>
          <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
          <con:default>116</con:default>
          <con:path xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:parameter>
      </con:parameters>
      <con:method name="Get SocialLift Method" method="GET">
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>text/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>text/plain</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:request name="Get SocialLift Request" mediaType="application/xml" accept="">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="SocialLiftByChannel" path="/REST/report/socialLiftByChannel/{param0}">
      <con:settings/>
      <con:parameters>
        <con:parameter>
          <con:name>param0</con:name>
          <con:value>116</con:value>
          <con:style>TEMPLATE</con:style>
          <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
          <con:default>116</con:default>
          <con:path xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:parameter>
      </con:parameters>
      <con:method name="Get SocialLiftByChannel Method" method="GET">
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>text/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>text/plain</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:request name="Get SocialLiftByChannel Request" mediaType="application/xml" accept="">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="sharethis_admin"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="Audience Size" path="/REST/report/audienceSize/20582,20580">
      <con:settings/>
      <con:parameters/>
      <con:method name="Get Audience Size Method" method="GET">
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>text/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>text/plain</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:request name="Get Audience Size Request" mediaType="application/xml" accept="">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="Pixel" path="/REST/report/pixel/mn9">
      <con:settings/>
      <con:parameters/>
      <con:method name="Get Pixel Method" method="GET">
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>text/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>text/plain</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:request name="Get Pixel Request" mediaType="application/xml" accept="">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="Campaign Social Interest" path="/REST/report/campaignSocialInterest/{param0}">
      <con:settings/>
      <con:parameters>
        <con:parameter>
          <con:name>param0</con:name>
          <con:value>77</con:value>
          <con:style>TEMPLATE</con:style>
          <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
          <con:default>77</con:default>
          <con:path xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:parameter>
      </con:parameters>
      <con:method name="Get Campaign Social Interest Method" method="GET">
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>text/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>text/plain</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:request name="Get Campaign Social Interest Request" mediaType="application/xml" accept="">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="Campaign Social Interest Date Check" path="/REST/report/campaignSocialInterest/{param0}">
      <con:settings/>
      <con:parameters>
        <con:parameter>
          <con:name>param0</con:name>
          <con:value>76</con:value>
          <con:style>TEMPLATE</con:style>
          <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
          <con:default>76</con:default>
          <con:path xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:parameter>
        <con:parameter>
          <con:name>start</con:name>
          <con:value>2013-10-08</con:value>
          <con:style>QUERY</con:style>
          <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
          <con:default>2013-10-08</con:default>
          <con:path xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:parameter>
        <con:parameter>
          <con:name>end</con:name>
          <con:value>2013-10-09</con:value>
          <con:style>QUERY</con:style>
          <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
          <con:default>2013-10-09</con:default>
          <con:path xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:parameter>
      </con:parameters>
      <con:method name="Get Campaign Social Interest Date Check Method" method="GET">
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>text/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>text/plain</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:request name="Get Campaign Social Interest Date Check Request" mediaType="application/xml" accept="">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="Campaign Search" path="/REST/report/campaignSearch/73">
      <con:settings/>
      <con:parameters/>
      <con:method name="Get Campaign Search Method" method="GET">
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>text/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>text/plain</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:request name="Get Campaign Search Request" mediaType="application/xml" accept="">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="Campaign Search - Date Wise" path="/REST/report/campaignSearch/{param0}">
      <con:settings/>
      <con:parameters>
        <con:parameter>
          <con:name>param0</con:name>
          <con:value>74</con:value>
          <con:style>TEMPLATE</con:style>
          <con:default>74</con:default>
        </con:parameter>
        <con:parameter>
          <con:name>start</con:name>
          <con:value>2013-10-09</con:value>
          <con:style>QUERY</con:style>
          <con:default>2013-10-09</con:default>
        </con:parameter>
        <con:parameter>
          <con:name>end</con:name>
          <con:value>2013-10-09</con:value>
          <con:style>QUERY</con:style>
          <con:default>2013-10-09</con:default>
        </con:parameter>
      </con:parameters>
      <con:method name="Campaign Search - Date Wise Method" method="GET">
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>text/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>text/plain</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:request name="Campaign Search - Date Wise Request" mediaType="application/xml" accept="">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="Campaign Social Channel" path="/REST/report/campaignSocialChannel/{param0}">
      <con:settings/>
      <con:parameters>
        <con:parameter>
          <con:name>param0</con:name>
          <con:value>77</con:value>
          <con:style>TEMPLATE</con:style>
          <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
          <con:default>77</con:default>
          <con:path xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:parameter>
      </con:parameters>
      <con:method name="Get Campaign Social Channel Method" method="GET">
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>text/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>text/plain</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:request name="Get Campaign Social Channel Request" mediaType="application/xml" accept="">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="Campaign Social Channel - Date Wise" path="/REST/report/campaignSocialChannel/{param0}">
      <con:settings/>
      <con:parameters>
        <con:parameter>
          <con:name>param0</con:name>
          <con:value>91</con:value>
          <con:style>TEMPLATE</con:style>
          <con:default>91</con:default>
        </con:parameter>
        <con:parameter>
          <con:name>start</con:name>
          <con:value>2013-10-09</con:value>
          <con:style>QUERY</con:style>
          <con:default>2013-10-09</con:default>
        </con:parameter>
        <con:parameter>
          <con:name>end</con:name>
          <con:value>2013-10-09</con:value>
          <con:style>QUERY</con:style>
          <con:default>2013-10-09</con:default>
        </con:parameter>
      </con:parameters>
      <con:method name="Campaign Social Channel - Date Wise Method" method="GET">
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>text/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>text/plain</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:request name="Campaign Social Channel - Date Wise Request" mediaType="application/xml" accept="">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="Campaign Demo Profile" path="/REST/report/campaignDemoProfile/{param0}">
      <con:settings/>
      <con:parameters>
        <con:parameter>
          <con:name>param0</con:name>
          <con:value>194</con:value>
          <con:style>TEMPLATE</con:style>
          <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
          <con:default>194</con:default>
          <con:path xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:parameter>
      </con:parameters>
      <con:method name="Get Campaign Demo Profile Method" method="GET">
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>text/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>text/plain</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:request name="Get Campaign Demo Profile Request" mediaType="application/xml" accept="">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="Campaign LifeStyle Profile" path="/REST/report/campaignLifeStyleProfile/{param0}">
      <con:settings/>
      <con:parameters>
        <con:parameter>
          <con:name>param0</con:name>
          <con:value>250</con:value>
          <con:style>TEMPLATE</con:style>
          <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
          <con:default>250</con:default>
          <con:path xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:parameter>
        <con:parameter>
          <con:name>start</con:name>
          <con:value>2013-10-10</con:value>
          <con:style>QUERY</con:style>
          <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
          <con:default>2013-10-10</con:default>
          <con:path xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:parameter>
        <con:parameter>
          <con:name>end</con:name>
          <con:value>2013-10-10</con:value>
          <con:style>QUERY</con:style>
          <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
          <con:default>2013-10-10</con:default>
          <con:path xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:parameter>
      </con:parameters>
      <con:method name="Get Campaign LifeStyle Profile Method" method="GET">
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>text/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>text/plain</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:request name="Get Campaign LifeStyle Profile Request" mediaType="application/xml" accept="">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="Campaign Vertical - Date Wise" path="/REST/report/campaignVertical/{param0}">
      <con:settings/>
      <con:parameters>
        <con:parameter>
          <con:name>param0</con:name>
          <con:value>191</con:value>
          <con:style>TEMPLATE</con:style>
          <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
          <con:default>191</con:default>
          <con:path xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:parameter>
        <con:parameter>
          <con:name>start</con:name>
          <con:value>2013-10-12</con:value>
          <con:style>QUERY</con:style>
          <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
          <con:default>2013-10-12</con:default>
          <con:path xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:parameter>
        <con:parameter>
          <con:name>end</con:name>
          <con:value>2013-10-12</con:value>
          <con:style>QUERY</con:style>
          <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
          <con:default>2013-10-12</con:default>
          <con:path xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:parameter>
      </con:parameters>
      <con:method name="Get Campaign Vertical - Date Wise Method" method="GET">
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>text/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>text/plain</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:request name="Get Campaign Vertical - Date Wise Request" mediaType="application/xml" accept="">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
  </con:interface>
  <con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Taxonomy Service" type="rest" basePath="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:definitionCache type="TEXT" rootPart=""/><con:endpoints>
      <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
    </con:endpoints>
    <con:resource name="STX - Index" path="/REST/taxonomy/stx/1420,2038">
      <con:settings/>
      <con:parameters/>
      <con:method name="Get STX - Index Method" method="GET">
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>text/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>text/plain</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:request name="Get STX - Index Request" mediaType="application/xml" accept="">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="ShareThis L99 Service" path="/REST/taxonomy/l99/">
      <con:settings/>
      <con:parameters/>
      <con:method name="Get L99 Method" method="GET">
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>text/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>text/plain</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:request name="Get L99 Request" mediaType="application/xml" accept="">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="L99 - Index" path="/REST/taxonomy/l99/1,101">
      <con:settings/>
      <con:parameters/>
      <con:method name="Get L99 - Index Method" method="GET">
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>text/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>text/plain</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:request name="Get L99 - Index Request" mediaType="application/xml" accept="">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="DLX - Index" path="/REST/taxonomy/dlx/100000,100001">
      <con:settings/>
      <con:parameters/>
      <con:method name="Get DLX - Index Method" method="GET">
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>text/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>text/plain</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:request name="Get DLX - Index Request" mediaType="application/xml" accept="">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="ShareThis Exchange Service - STX" path="/REST/taxonomy/stx/">
      <con:settings/>
      <con:parameters/>
      <con:method name="Get STX Method" method="GET">
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>text/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>text/plain</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Get STX Request" mediaType="application/xml" accept="">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="Data Logix Service - DLX" path="/REST/taxonomy/dlx/">
      <con:settings/>
      <con:parameters/>
      <con:method name="Get DLX - Method" method="GET">
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>text/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>text/plain</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:request name="Get DLX - Request" mediaType="application/xml" accept="">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
  </con:interface>
  <con:testSuite name="Authentication Service API - TestSuite">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get Authentication TestCase" searchProperties="true" id="75afb2cb-54da-4ef6-a5e4-d6f59eb7720b">
      <con:settings/>
      <con:testStep type="restrequest" name="Get Authentication Method - Get Authentication Request">
        <con:settings/>
        <con:config service="Authentication Service" resourcePath="/REST/auth/" methodName="Get Authentication Method" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get Authentication Method - Get Authentication Request" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
            </con:settings>
            <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
            <con:request/>
            <con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes">
              <con:configuration><codes>400,401,402,404</codes></con:configuration>
            </con:assertion>
            <con:assertion type="Simple Contains" name="Contains">
              <con:configuration><token>"status":"SUCCESS"</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
              <con:configuration><codes>200,201</codes></con:configuration>
            </con:assertion>
            <con:assertion type="Sensitive Information Exposure" name="Sensitive Information Exposure">
              <con:configuration>
                <AssertionSpecificExposureList>Authorization###${#Project#Auth}</AssertionSpecificExposureList>
                <IncludeProjectSpecific>true</IncludeProjectSpecific>
                <IncludeGlobal>true</IncludeGlobal>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Authentication Status">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Authentication Service assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Authentication Method - Get Authentication Request#Response}' ).toString()
log.info(response)

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Asserting status is correct
assert json.status == "SUCCESS"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Authentication Not Null">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Authentication Service assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Authentication Method - Get Authentication Request#Response}' ).toString()
log.info(response)

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Asserting Auth value  is not null
assert json.data.auth != null</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Authentication Length">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Authentication Service assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Authentication Method - Get Authentication Request#Response}' ).toString()
log.info(response)

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

log.info json.data.auth.size()

//Asserting Auth length  is correct
assert json.data.auth.size()  >=  64</scriptText>
              </con:configuration>
            </con:assertion>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:properties/>
  </con:testSuite>
  <con:testSuite name="Account Service API - TestSuite">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get Account ID TestCase" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Get Account ID Method - Get Account ID Request">
        <con:settings/>
        <con:config service="Account Service - Check By Account ID" resourcePath="/REST/account/21" methodName="Get Account ID Method" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get Account ID Method - Get Account ID Request" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
            </con:settings>
            <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
            <con:request/>
            <con:assertion type="Simple Contains" name="Contains">
              <con:configuration>
                <token>"status":"SUCCESS"</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Sensitive Information Exposure" name="Sensitive Information Exposure">
              <con:configuration>
                <AssertionSpecificExposureList>Authorization###${#Project#Auth}</AssertionSpecificExposureList>
                <IncludeProjectSpecific>true</IncludeProjectSpecific>
                <IncludeGlobal>true</IncludeGlobal>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400,401,402,404</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200,201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Account ID">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Account Service assertion - Check for Account ID
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Account ID Method - Get Account ID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Declare Response parameters
def ID = json.data.account.id[0]
 
//Print Reponse parameters
log.info(ID)

//Asserting ID value is correct
assert ID ==  "21"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Account Name">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Account Service assertion - Check for Account Name
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Account ID Method - Get Account ID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Declare Response parameters
def Name = json.data.account.name[0]
 
//Print Reponse parameters
log.info(Name)

//Asserting Name value is correct
assert Name ==  "Lenovo"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Account ThirdPartyID">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Account Service assertion - Check for Account ThirdPartyID
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Account ID Method - Get Account ID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Declare Response parameters
def ThirdPartyID = json.data.account.thirdPartyId[0]
 
//Print Reponse parameters
log.info(ThirdPartyID)

//Asserting ThirdPartyID value is correct
assert ThirdPartyID ==  "001A000000IRvA8IAL"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get Account Name TestCase" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Get Account Name Method - Get Account Name Request">
        <con:settings/>
        <con:config service="Account Service - Check By Account ID" resourcePath="/REST/account/" methodName="Get Account Name Method" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get Account Name Method - Get Account Name Request" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
            </con:settings>
            <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
            <con:request/>
            <con:assertion type="Simple Contains" name="Contains">
              <con:configuration>
                <token>"status":"SUCCESS"</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400,401,402,404</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Sensitive Information Exposure" name="Sensitive Information Exposure">
              <con:configuration>
                <AssertionSpecificExposureList>Authorization###${#Project#Auth}</AssertionSpecificExposureList>
                <IncludeProjectSpecific>true</IncludeProjectSpecific>
                <IncludeGlobal>true</IncludeGlobal>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200,201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Account ID">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Account ID  assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Account Name Method - Get Account Name Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Account ID
def ACT_ACC_ID = json.data.account.id
log.info(ACT_ACC_ID)

//Store Expected IDs in array
EXP_ACC_ID = ["62662"]

//Asserting if Expected account id matches to Actual account id
assert ACT_ACC_ID == EXP_ACC_ID</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Account Name">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Account Name  assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Account Name Method - Get Account Name Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Account Name
def ACT_ACC_NAME = json.data.account.name
log.info(ACT_ACC_NAME)

//Store Expected names in array
EXP_ACC_NAME = ["Sony_Mobile"]

//Asserting if Expected account name matches to Actual account name
assert ACT_ACC_NAME == EXP_ACC_NAME</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Account ThirdPartyID">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Account ThirdPartyID  assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Account Name Method - Get Account Name Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual ThirdPartyID
def ACT_ACC_TID = json.data.account.thirdPartyId
log.info(ACT_ACC_TID)

//Store Expected ThirdPartyID in array
EXP_ACC_TID = ["001F000000rHvmjIAC"]

//Asserting if Expected account thirdPartyId matches to Actual account thirdPartyId
assert ACT_ACC_TID == EXP_ACC_TID</scriptText>
              </con:configuration>
            </con:assertion>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="account.name" value="Sony_Mobile" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:properties/>
  </con:testSuite>
  <con:testSuite name="Opportunity Service API - TestSuite">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get Opportunity ID TestCase" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Get Opportunity ID Method - Get Opportunity ID Request">
        <con:settings/>
        <con:config service="Opportunity Service" resourcePath="/REST/opportunity/10" methodName="Get Opportunity ID Method" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get Opportunity ID Method - Get Opportunity ID Request" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
            </con:settings>
            <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
            <con:request/>
            <con:assertion type="Simple Contains" name="Contains">
              <con:configuration>
                <token>"status":"SUCCESS"</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400,401,402,404</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Sensitive Information Exposure" name="Sensitive Information Exposure">
              <con:configuration>
                <AssertionSpecificExposureList>Authorization###sharethis_admin</AssertionSpecificExposureList>
                <IncludeProjectSpecific>true</IncludeProjectSpecific>
                <IncludeGlobal>true</IncludeGlobal>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200,201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Opportunity ID">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Opportunity ID assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Opportunity ID Method - Get Opportunity ID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Opportunity ID
def ACT_OPP_ID = json.data.opportunity.id
log.info(ACT_OPP_ID)

//Store Expected Opportunity ID in array
EXP_OPP_ID = ["10"]

//Asserting if Expected Opportunity ID matches to Actual Opportunity ID
assert ACT_OPP_ID == EXP_OPP_ID</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Opportunity Name">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Opportunity Name assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Opportunity ID Method - Get Opportunity ID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Opportunity Name
def ACT_OPP_Name = json.data.opportunity.name
log.info(ACT_OPP_Name)

//Store Expected Opportunity Name in array
EXP_OPP_Name = ["Razorfish-VS-Pink Holiday Heartbreaker"]

//Asserting if Expected Opportunity Name matches to Actual Opportunity Name
assert ACT_OPP_Name == EXP_OPP_Name</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Opportunity SalesForceID">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Opportunity SalesForceID assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Opportunity ID Method - Get Opportunity ID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Opportunity SalesForceID
def ACT_OPP_SFID = json.data.opportunity.sfId
log.info(ACT_OPP_SFID)

//Store Expected Opportunity SalesForceID in array
EXP_OPP_SFID = ["006F000000EZJjQIAX"]

//Asserting if Expected Opportunity SalesForceID matches to Actual Opportunity SalesForceID
assert ACT_OPP_SFID == EXP_OPP_SFID</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Opportunity AccountID">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Opportunity AccountID assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Opportunity ID Method - Get Opportunity ID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Opportunity AccountID
def ACT_OPP_ACCID = json.data.opportunity.accountId
log.info(ACT_OPP_ACCID)

//Store Expected Opportunity AccountID in array
EXP_OPP_ACCID = ["001A000000KLGsLIAX"]

//Asserting if Expected Opportunity AccountID matches to Actual Opportunity AccountID
assert ACT_OPP_ACCID == EXP_OPP_ACCID</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Opportunity ExpectedRevenue">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Opportunity ExpectedRevenue assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Opportunity ID Method - Get Opportunity ID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Opportunity ExpectedRevenue
def ACT_OPP_REV = json.data.opportunity.expectedRevenue
log.info(ACT_OPP_REV)

//Store Expected Opportunity ExpectedRevenue in array
EXP_OPP_REV = ["0"]

//Asserting if Expected Opportunity ExpectedRevenue matches to Actual Opportunity ExpectedRevenue
assert ACT_OPP_REV == EXP_OPP_REV</scriptText>
              </con:configuration>
            </con:assertion>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get Opportunity Name TestCase" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Get Opportunity ID Method - Get Opportunity ID Request">
        <con:settings/>
        <con:config service="Opportunity Service" resourcePath="/REST/opportunity/" methodName="Get Opportunity Name Method" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get Opportunity ID Method - Get Opportunity ID Request" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
            </con:settings>
            <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
            <con:request/>
            <con:assertion type="Simple Contains" name="Contains">
              <con:configuration>
                <token>"status":"SUCCESS"</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400,401,402,404</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Sensitive Information Exposure" name="Sensitive Information Exposure">
              <con:configuration>
                <AssertionSpecificExposureList>Authorization###sharethis_admin</AssertionSpecificExposureList>
                <IncludeProjectSpecific>true</IncludeProjectSpecific>
                <IncludeGlobal>true</IncludeGlobal>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200,201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Opportunity ID">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Opportunity ID assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Opportunity ID Method - Get Opportunity ID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Opportunity ID
def ACT_OPP_ID = json.data.opportunity.id
log.info(ACT_OPP_ID)

//Store Expected Opportunity ID in array
EXP_OPP_ID = ["1000135"]

//Asserting if Expected Opportunity ID matches to Actual Opportunity ID
assert ACT_OPP_ID == EXP_OPP_ID</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Opportunity Name">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Opportunity Name assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Opportunity ID Method - Get Opportunity ID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Opportunity Name
def ACT_OPP_Name = json.data.opportunity.name
log.info(ACT_OPP_Name)

//Store Expected Opportunity Name in array
EXP_OPP_Name = ["Discover Boating CA"]

//Asserting if Expected Opportunity Name matches to Actual Opportunity Name
assert ACT_OPP_Name == EXP_OPP_Name</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Opportunity SalesForceID">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Opportunity SalesForceID assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Opportunity ID Method - Get Opportunity ID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Opportunity SalesForceID
def ACT_OPP_SFID = json.data.opportunity.sfId
log.info(ACT_OPP_SFID)

//Store Expected Opportunity SalesForceID in array
EXP_OPP_SFID = ["006F000000JChgCIAT"]

//Asserting if Expected Opportunity SalesForceID matches to Actual Opportunity SalesForceID
assert ACT_OPP_SFID == EXP_OPP_SFID</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Opportunity AccountID">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Opportunity AccountID assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Opportunity ID Method - Get Opportunity ID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Opportunity AccountID
def ACT_OPP_ACCID = json.data.opportunity.accountId
log.info(ACT_OPP_ACCID)

//Store Expected Opportunity AccountID in array
EXP_OPP_ACCID = ["001F000000p6EHbIAM"]

//Asserting if Expected Opportunity AccountID matches to Actual Opportunity AccountID
assert ACT_OPP_ACCID == EXP_OPP_ACCID</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Opportunity ExpectedRevenue" disabled="true">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Opportunity ExpectedRevenue assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Opportunity ID Method - Get Opportunity ID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Opportunity ExpectedRevenue
def ACT_OPP_REV = json.data.opportunity.expectedRevenue
log.info(ACT_OPP_REV)

//Store Expected Opportunity ExpectedRevenue in array
EXP_OPP_REV = ["3666.5"]

//Asserting if Expected Opportunity ExpectedRevenue matches to Actual Opportunity ExpectedRevenue
assert ACT_OPP_REV == EXP_OPP_REV</scriptText>
              </con:configuration>
            </con:assertion>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get Opportunity AccountID TestCase" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Get Opportunity ID Method - Get Opportunity ID Request">
        <con:settings/>
        <con:config service="Opportunity Service" resourcePath="/REST/opportunity/" methodName="Get Opportunity AccountID Method" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get Opportunity ID Method - Get Opportunity ID Request" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
            </con:settings>
            <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
            <con:request/>
            <con:assertion type="Simple Contains" name="Contains">
              <con:configuration>
                <token>"status":"SUCCESS"</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400,401,402,404</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Sensitive Information Exposure" name="Sensitive Information Exposure">
              <con:configuration>
                <AssertionSpecificExposureList>Authorization###sharethis_admin</AssertionSpecificExposureList>
                <IncludeProjectSpecific>true</IncludeProjectSpecific>
                <IncludeGlobal>true</IncludeGlobal>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200,201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Opportunity ID">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Opportunity ID assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Opportunity ID Method - Get Opportunity ID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Opportunity ID
def ACT_OPP_ID = json.data.opportunity.id
log.info(ACT_OPP_ID)

//Store Expected Opportunity ID in array
EXP_OPP_ID = ["25"]

//Asserting if Expected Opportunity ID matches to Actual Opportunity ID
assert ACT_OPP_ID == EXP_OPP_ID</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Opportunity Name">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Opportunity Name assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Opportunity ID Method - Get Opportunity ID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Opportunity Name
def ACT_OPP_Name = json.data.opportunity.name
log.info(ACT_OPP_Name)

//Store Expected Opportunity Name in array
EXP_OPP_Name = ["Southwest - One Week Flight Dates DR Q411"]

//Asserting if Expected Opportunity Name matches to Actual Opportunity Name
assert ACT_OPP_Name == EXP_OPP_Name</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Opportunity SalesForceID">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Opportunity SalesForceID assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Opportunity ID Method - Get Opportunity ID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Opportunity SalesForceID
def ACT_OPP_SFID = json.data.opportunity.sfId
log.info(ACT_OPP_SFID)

//Store Expected Opportunity SalesForceID in array
EXP_OPP_SFID = ["006F000000EZ1R2IAL"]

//Asserting if Expected Opportunity SalesForceID matches to Actual Opportunity SalesForceID
assert ACT_OPP_SFID == EXP_OPP_SFID</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Opportunity AccountID">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Opportunity AccountID assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Opportunity ID Method - Get Opportunity ID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Opportunity AccountID
def ACT_OPP_ACCID = json.data.opportunity.accountId
log.info(ACT_OPP_ACCID)

//Store Expected Opportunity AccountID in array
EXP_OPP_ACCID = ["001A000000dcnEnIAI"]

//Asserting if Expected Opportunity AccountID matches to Actual Opportunity AccountID
assert ACT_OPP_ACCID == EXP_OPP_ACCID</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Opportunity ExpectedRevenue">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Opportunity ExpectedRevenue assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Opportunity ID Method - Get Opportunity ID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Opportunity ExpectedRevenue
def ACT_OPP_REV = json.data.opportunity.expectedRevenue
log.info(ACT_OPP_REV)

//Store Expected Opportunity ExpectedRevenue in array
EXP_OPP_REV = ["0"]

//Asserting if Expected Opportunity ExpectedRevenue matches to Actual Opportunity ExpectedRevenue
assert ACT_OPP_REV == EXP_OPP_REV</scriptText>
              </con:configuration>
            </con:assertion>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:properties/>
  </con:testSuite>
  <con:testSuite name="Campaign Group Service API - TestSuite">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get Campaign Group ID TestCase" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Get Campaign Group ID Method - Get Campaign Group ID Request">
        <con:settings/>
        <con:config service="Campaign Group Service" resourcePath="/REST/campaign_group/{param0}" methodName="Get Campaign Group ID Method" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get Campaign Group ID Method - Get Campaign Group ID Request" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
            </con:settings>
            <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
            <con:request/>
            <con:assertion type="Simple Contains" name="Contains">
              <con:configuration>
                <token>"status":"SUCCESS"</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400,401,402,404</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Sensitive Information Exposure" name="Sensitive Information Exposure">
              <con:configuration>
                <AssertionSpecificExposureList>Authorization###sharethis_admin</AssertionSpecificExposureList>
                <IncludeProjectSpecific>true</IncludeProjectSpecific>
                <IncludeGlobal>true</IncludeGlobal>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200,201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Group ID">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Campaign Group ID assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign Group ID Method - Get Campaign Group ID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Group ID
def ACT_CPG_ID = json.data.campaign_group.id
log.info(ACT_CPG_ID)

//Store Expected Campaign Group ID in array
EXP_CPG_ID = ["100"]

//Asserting if Expected Campaign Group ID matches to Actual Campaign Group ID
assert ACT_CPG_ID == EXP_CPG_ID</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Group Name">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Campaign Group Name assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign Group ID Method - Get Campaign Group ID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Group Name
def ACT_CPG_Name = json.data.campaign_group.name
log.info(ACT_CPG_Name)

//Store Expected Campaign Group Name in array
EXP_CPG_Name = ["Test-Dummy"]

//Asserting if Expected Campaign Group Name matches to Actual Campaign Group Name
assert ACT_CPG_Name == EXP_CPG_Name</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Group StartDate">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Campaign Group StartDate assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign Group ID Method - Get Campaign Group ID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Group StartDate
def ACT_CPG_STD = json.data.campaign_group.startDate
log.info(ACT_CPG_STD)

//Store Expected Campaign Group StartDate in array
EXP_CPG_STD = ["1345618800"]

//Asserting if Expected Campaign Group StartDate matches to Actual Campaign Group StartDate
assert ACT_CPG_STD == EXP_CPG_STD</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Group EndDate">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Campaign Group EndDate assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign Group ID Method - Get Campaign Group ID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Group EndDate
def ACT_CPG_ETD = json.data.campaign_group.endDate
log.info(ACT_CPG_ETD)

//Store Expected Campaign Group EndDate in array
EXP_CPG_ETD = ["1380610799"]

//Asserting if Expected Campaign Group EndDate matches to Actual Campaign Group EndDate
assert ACT_CPG_ETD == EXP_CPG_ETD</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Group SalesForce Name">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Campaign Group SalesForce Name assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign Group ID Method - Get Campaign Group ID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Group SalesForce Name
def ACT_CPG_SFNAME = json.data.campaign_group.sfName
log.info(ACT_CPG_SFNAME)

//Store Expected Campaign Group SalesForce Name in array
EXP_CPG_SFNAME = ["ShareThis Button"]

//Asserting if Expected Campaign Group SalesForce Name matches to Actual Campaign Group SalesForce Name
assert ACT_CPG_SFNAME == EXP_CPG_SFNAME</scriptText>
              </con:configuration>
            </con:assertion>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get Campaign Group Name TestCase" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Get Campaign Group Name Method - Get Campaign Group Name Request">
        <con:settings/>
        <con:config service="Campaign Group Service" resourcePath="/REST/campaign_group/" methodName="Get Campaign Group Name Method" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get Campaign Group Name Method - Get Campaign Group Name Request" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
            </con:settings>
            <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
            <con:request/>
            <con:assertion type="Simple Contains" name="Contains">
              <con:configuration>
                <token>"status":"SUCCESS"</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400,401,402,404</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Sensitive Information Exposure" name="Sensitive Information Exposure">
              <con:configuration>
                <AssertionSpecificExposureList>Authorization###sharethis_admin</AssertionSpecificExposureList>
                <IncludeProjectSpecific>true</IncludeProjectSpecific>
                <IncludeGlobal>true</IncludeGlobal>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200,201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Group ID">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Campaign Group ID assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign Group Name Method - Get Campaign Group Name Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Group ID
def ACT_CPG_ID = json.data.campaign_group.id
log.info(ACT_CPG_ID)

//Store Expected Campaign Group ID in array
EXP_CPG_ID = ["384"]

//Asserting if Expected Campaign Group ID matches to Actual Campaign Group ID
assert ACT_CPG_ID == EXP_CPG_ID</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Group Name">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Campaign Group Name assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign Group Name Method - Get Campaign Group Name Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Group Name
def ACT_CPG_Name = json.data.campaign_group.name
log.info(ACT_CPG_Name)

//Store Expected Campaign Group Name in array
EXP_CPG_Name = ["BatCarnival"]

//Asserting if Expected Campaign Group Name matches to Actual Campaign Group Name
assert ACT_CPG_Name == EXP_CPG_Name</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Group StartDate">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Campaign Group StartDate assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign Group Name Method - Get Campaign Group Name Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Group StartDate
def ACT_CPG_STD = json.data.campaign_group.startDate
log.info(ACT_CPG_STD)

//Store Expected Campaign Group StartDate in array
EXP_CPG_STD = ["1380870000"]

//Asserting if Expected Campaign Group StartDate matches to Actual Campaign Group StartDate
assert ACT_CPG_STD == EXP_CPG_STD</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Group EndDate">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Campaign Group EndDate assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign Group Name Method - Get Campaign Group Name Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Group EndDate
def ACT_CPG_ETD = json.data.campaign_group.endDate
log.info(ACT_CPG_ETD)

//Store Expected Campaign Group EndDate in array
EXP_CPG_ETD = ["1383289199"]

//Asserting if Expected Campaign Group EndDate matches to Actual Campaign Group EndDate
assert ACT_CPG_ETD == EXP_CPG_ETD</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Group SalesForce Name">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Campaign Group SalesForce Name assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign Group Name Method - Get Campaign Group Name Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Group SalesForce Name
def ACT_CPG_SFNAME = json.data.campaign_group.sfName
log.info(ACT_CPG_SFNAME)

//Store Expected Campaign Group SalesForce Name in array
EXP_CPG_SFNAME = ["2013 Carnival Cruise Lines - DR - Q1/Q22013"]

//Asserting if Expected Campaign Group SalesForce Name matches to Actual Campaign Group SalesForce Name
assert ACT_CPG_SFNAME == EXP_CPG_SFNAME</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Group KeywordGroupID">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Campaign Group KeywordGroupID  assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign Group Name Method - Get Campaign Group Name Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Group KeywordGroupID
def ACT_CPG_KID = json.data.campaign_group.keywordGroupId
log.info(ACT_CPG_KID)

//Store Expected Campaign Group KeywordGroupID in array
EXP_CPG_KID = [["263"]]

//Asserting if Expected Campaign Group KeywordGroupID matches to Actual Campaign Group KeywordGroupID
assert ACT_CPG_KID == EXP_CPG_KID</scriptText>
              </con:configuration>
            </con:assertion>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="campaignGroup.name" value="BatCarnival" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get Campaign_Group.ID TestCase" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Get Campaign_Group.ID Method - Get Campaign_Group.ID Request">
        <con:settings/>
        <con:config service="Campaign Group Service" resourcePath="/REST/campaign_group/" methodName="Get Campaign_Group.ID Method" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get Campaign_Group.ID Method - Get Campaign_Group.ID Request" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
            </con:settings>
            <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
            <con:request/>
            <con:assertion type="Simple Contains" name="Contains">
              <con:configuration>
                <token>"status":"SUCCESS"</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400,401,402,404</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Sensitive Information Exposure" name="Sensitive Information Exposure">
              <con:configuration>
                <AssertionSpecificExposureList>Authorization###sharethis_admin</AssertionSpecificExposureList>
                <IncludeProjectSpecific>true</IncludeProjectSpecific>
                <IncludeGlobal>true</IncludeGlobal>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200,201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Group ID">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Campaign Group ID assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign_Group.ID Method - Get Campaign_Group.ID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Group ID
def ACT_CPG_ID = json.data.campaign_group.id
log.info(ACT_CPG_ID)

//Store Expected Campaign Group ID in array
EXP_CPG_ID = ["10"]

//Asserting if Expected Campaign Group ID matches to Actual Campaign Group ID
assert ACT_CPG_ID == EXP_CPG_ID</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Group Name">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Campaign Group Name assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign_Group.ID Method - Get Campaign_Group.ID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Group Name
def ACT_CPG_Name = json.data.campaign_group.name
log.info(ACT_CPG_Name)

//Store Expected Campaign Group Name in array
EXP_CPG_Name = ["Hiscox"]

//Asserting if Expected Campaign Group Name matches to Actual Campaign Group Name
assert ACT_CPG_Name == EXP_CPG_Name</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Group StartDate">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Campaign Group StartDate assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign_Group.ID Method - Get Campaign_Group.ID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Group StartDate
def ACT_CPG_STD = json.data.campaign_group.startDate
log.info(ACT_CPG_STD)

//Store Expected Campaign Group StartDate in array
EXP_CPG_STD = ["1332918000"]

//Asserting if Expected Campaign Group StartDate matches to Actual Campaign Group StartDate
assert ACT_CPG_STD == EXP_CPG_STD</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Group EndDate">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Campaign Group EndDate assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign_Group.ID Method - Get Campaign_Group.ID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Group EndDate
def ACT_CPG_ETD = json.data.campaign_group.endDate
log.info(ACT_CPG_ETD)

//Store Expected Campaign Group EndDate in array
EXP_CPG_ETD = ["1364713200"]

//Asserting if Expected Campaign Group EndDate matches to Actual Campaign Group EndDate
assert ACT_CPG_ETD == EXP_CPG_ETD</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Group SalesForce Name">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Campaign Group SalesForce Name assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign_Group.ID Method - Get Campaign_Group.ID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Group SalesForce Name
def ACT_CPG_SFNAME = json.data.campaign_group.sfName
log.info(ACT_CPG_SFNAME)

//Store Expected Campaign Group SalesForce Name in array
EXP_CPG_SFNAME = ["*T100* American Greetings Network: Widget Distribution and Partnership"]

//Asserting if Expected Campaign Group SalesForce Name matches to Actual Campaign Group SalesForce Name
assert ACT_CPG_SFNAME == EXP_CPG_SFNAME</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Group Account Name">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Campaign Group Account Name  assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign_Group.ID Method - Get Campaign_Group.ID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual  Campaign Group Account Name
def ACT_CPG_ACCN = json.data.campaign_group.accountName
log.info(ACT_CPG_ACCN)

//Store Expected  Campaign Group Account Name in array
EXP_CPG_ACCN = ["American_Greetings"]

//Asserting if Expected  Campaign Group Account Name matches to Actual  Campaign Group Account Name
assert ACT_CPG_ACCN == EXP_CPG_ACCN</scriptText>
              </con:configuration>
            </con:assertion>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="campaignGroup.name" value="BatCarnival" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get Campaign_Group.ThirdPartyOppId TestCase" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Get Campaign_Group.ThirdPartyOppId Method - Get Campaign_Group.ThirdPartyOppId Request">
        <con:settings/>
        <con:config service="Campaign Group Service" resourcePath="/REST/campaign_group/" methodName="Get Campaign_Group.ThirdPartyOppId Method" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get Campaign_Group.ThirdPartyOppId Method - Get Campaign_Group.ThirdPartyOppId Request" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
            </con:settings>
            <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
            <con:request/>
            <con:assertion type="Simple Contains" name="Contains">
              <con:configuration>
                <token>"status":"SUCCESS"</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400,401,402,404</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Sensitive Information Exposure" name="Sensitive Information Exposure">
              <con:configuration>
                <AssertionSpecificExposureList>Authorization###sharethis_admin</AssertionSpecificExposureList>
                <IncludeProjectSpecific>true</IncludeProjectSpecific>
                <IncludeGlobal>true</IncludeGlobal>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200,201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Group ID">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Campaign Group ID assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign_Group.ThirdPartyOppId Method - Get Campaign_Group.ThirdPartyOppId Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Group ID
def ACT_CPG_ID = json.data.campaign_group.id
log.info(ACT_CPG_ID)

//Store Expected Campaign Group ID in array
EXP_CPG_ID = ["383"]

//Asserting if Expected Campaign Group ID matches to Actual Campaign Group ID
assert ACT_CPG_ID == EXP_CPG_ID</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Group Name">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Campaign Group Name assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign_Group.ThirdPartyOppId Method - Get Campaign_Group.ThirdPartyOppId Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Group Name
def ACT_CPG_Name = json.data.campaign_group.name
log.info(ACT_CPG_Name)

//Store Expected Campaign Group Name in array
EXP_CPG_Name = ["Rons_CG"]

//Asserting if Expected Campaign Group Name matches to Actual Campaign Group Name
assert ACT_CPG_Name == EXP_CPG_Name</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Group StartDate">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Campaign Group StartDate assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign_Group.ThirdPartyOppId Method - Get Campaign_Group.ThirdPartyOppId Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Group StartDate
def ACT_CPG_STD = json.data.campaign_group.startDate
log.info(ACT_CPG_STD)

//Store Expected Campaign Group StartDate in array
EXP_CPG_STD = ["1380610800"]

//Asserting if Expected Campaign Group StartDate matches to Actual Campaign Group StartDate
assert ACT_CPG_STD == EXP_CPG_STD</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Group EndDate">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Campaign Group EndDate assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign_Group.ThirdPartyOppId Method - Get Campaign_Group.ThirdPartyOppId Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Group EndDate
def ACT_CPG_ETD = json.data.campaign_group.endDate
log.info(ACT_CPG_ETD)

//Store Expected Campaign Group EndDate in array
EXP_CPG_ETD = ["1383289199"]

//Asserting if Expected Campaign Group EndDate matches to Actual Campaign Group EndDate
assert ACT_CPG_ETD == EXP_CPG_ETD</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Group SalesForce Name">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Campaign Group SalesForce Name assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign_Group.ThirdPartyOppId Method - Get Campaign_Group.ThirdPartyOppId Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Group SalesForce Name
def ACT_CPG_SFNAME = json.data.campaign_group.sfName
log.info(ACT_CPG_SFNAME)

//Store Expected Campaign Group SalesForce Name in array
EXP_CPG_SFNAME = ["Klout"]

//Asserting if Expected Campaign Group SalesForce Name matches to Actual Campaign Group SalesForce Name
assert ACT_CPG_SFNAME == EXP_CPG_SFNAME</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Group Account Name">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Campaign Group Account Name  assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign_Group.ThirdPartyOppId Method - Get Campaign_Group.ThirdPartyOppId Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual  Campaign Group Account Name
def ACT_CPG_ACCN = json.data.campaign_group.accountName
log.info(ACT_CPG_ACCN)

//Store Expected  Campaign Group Account Name in array
EXP_CPG_ACCN = ["Klout"]

//Asserting if Expected  Campaign Group Account Name matches to Actual  Campaign Group Account Name
assert ACT_CPG_ACCN == EXP_CPG_ACCN</scriptText>
              </con:configuration>
            </con:assertion>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="campaignGroup.name" value="BatCarnival" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:properties/>
  </con:testSuite>
  <con:testSuite name="Campaign Service API - TestSuite">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get Campaign_ID TestCase" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Get Campaign_ID Method - Get Campaign_ID Request">
        <con:settings/>
        <con:config service="Campaign Service" resourcePath="/REST/campaign/{param0}" methodName="Get Campaign_ID Method" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get Campaign_ID Method - Get Campaign_ID Request" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
            </con:settings>
            <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
            <con:request/>
            <con:assertion type="Simple Contains" name="Contains">
              <con:configuration>
                <token>"status":"SUCCESS"</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400,401,402,404</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Sensitive Information Exposure" name="Sensitive Information Exposure">
              <con:configuration>
                <AssertionSpecificExposureList>Authorization###${#Project#Auth}</AssertionSpecificExposureList>
                <IncludeProjectSpecific>true</IncludeProjectSpecific>
                <IncludeGlobal>true</IncludeGlobal>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200,201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign ID">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Campaign ID assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign_ID Method - Get Campaign_ID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign ID
def ACT_CP_ID = json.data.campaign.id
log.info(ACT_CP_ID)

//Store Expected Campaign ID in array
EXP_CP_ID = ["150"]

//Asserting if Expected Campaign ID matches to Actual Campaign ID
assert ACT_CP_ID == EXP_CP_ID</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Status">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Campaign Status assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign_ID Method - Get Campaign_ID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Status
def ACT_CP_ID = json.data.campaign.status
log.info(ACT_CP_ID)

//Store Expected Campaign Status  in array
EXP_CP_ID = ["PAUSED"]

//Asserting if Expected Campaign Status matches to Actual Campaign Status
assert ACT_CP_ID == EXP_CP_ID</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Budget Amount">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Campaign Budget Amount assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign_ID Method - Get Campaign_ID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Budget Amount
def ACT_CP_BA = json.data.campaign.budgetAmount
log.info(ACT_CP_BA)

//Store Expected Campaign Budget Amount  in array
EXP_CP_BA = ["200000000"]

//Asserting if Expected Campaign Budget Amount matches to Actual Campaign Budget Amount
assert ACT_CP_BA == EXP_CP_BA</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Frequency Cap Impression">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Campaign Frequency Cap Impression assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign_ID Method - Get Campaign_ID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Frequency Cap Impression
def ACT_CP_FCI = json.data.campaign.frequencyCapImpression
log.info(ACT_CP_FCI)

//Store Expected Campaign Frequency Cap Impression  in array
EXP_CP_FCI = ["7"]

//Asserting if Expected Campaign Frequency Cap Impression matches to Actual Campaign Frequency Cap Impression
assert ACT_CP_FCI == EXP_CP_FCI</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Frequency Cap Level">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Campaign Frequency Cap Level assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign_ID Method - Get Campaign_ID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Frequency Cap Level
def ACT_CP_FCL = json.data.campaign.frequencyCapLevel
log.info(ACT_CP_FCL)

//Store Expected Campaign Frequency Cap Level  in array
EXP_CP_FCL = ["CAMPAIGN"]

//Asserting if Expected Campaign Frequency Cap Level matches to Actual Campaign Frequency Cap Level
assert ACT_CP_FCL == EXP_CP_FCL</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Display Formats">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Campaign Display Formats assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign_ID Method - Get Campaign_ID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Display Formats
def ACT_CP_DF = json.data.campaign.displayFormatId
log.info(ACT_CP_DF)

//Store Expected Campaign Display Formats  in array
EXP_CP_DF = ["1"]

//Asserting if Expected Campaign Display Formats matches to Actual Campaign Display Formats
assert ACT_CP_DF == EXP_CP_DF</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Name">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Campaign Name assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign_ID Method - Get Campaign_ID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Name
def ACT_CP_NM = json.data.campaign.name
log.info(ACT_CP_NM)

//Store Expected Campaign Name  in array
EXP_CP_NM = ["Cedars Sinai Flight 4 - Fibroids"]

//Asserting if Expected Campaign Name matches to Actual Campaign Name
assert ACT_CP_NM == EXP_CP_NM</scriptText>
              </con:configuration>
            </con:assertion>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get Campaign.ID TestCase" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Get Campaign.ID Method - Get Campaign.ID Request">
        <con:settings/>
        <con:config service="Campaign Service" resourcePath="/REST/campaign/" methodName="Get Campaign.ID Method" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get Campaign.ID Method - Get Campaign.ID Request" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
            </con:settings>
            <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
            <con:request/>
            <con:assertion type="Simple Contains" name="Contains">
              <con:configuration>
                <token>"status":"SUCCESS"</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400,401,402,404</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Sensitive Information Exposure" name="Sensitive Information Exposure">
              <con:configuration>
                <AssertionSpecificExposureList>Authorization###${#Project#Auth}</AssertionSpecificExposureList>
                <IncludeProjectSpecific>true</IncludeProjectSpecific>
                <IncludeGlobal>true</IncludeGlobal>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200,201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign ID">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Campaign ID assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign.ID Method - Get Campaign.ID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign ID
def ACT_CP_ID = json.data.campaign.id
log.info(ACT_CP_ID)

//Store Expected Campaign ID in array
EXP_CP_ID = ["151"]

//Asserting if Expected Campaign ID matches to Actual Campaign ID
assert ACT_CP_ID == EXP_CP_ID</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Status">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Campaign Status assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign.ID Method - Get Campaign.ID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Status
def ACT_CP_ID = json.data.campaign.status
log.info(ACT_CP_ID)

//Store Expected Campaign Status  in array
EXP_CP_ID = ["PAUSED"]

//Asserting if Expected Campaign Status matches to Actual Campaign Status
assert ACT_CP_ID == EXP_CP_ID</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Budget Amount">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Campaign Budget Amount assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign.ID Method - Get Campaign.ID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Budget Amount
def ACT_CP_BA = json.data.campaign.budgetAmount
log.info(ACT_CP_BA)

//Store Expected Campaign Budget Amount  in array
EXP_CP_BA = ["250000000"]

//Asserting if Expected Campaign Budget Amount matches to Actual Campaign Budget Amount
assert ACT_CP_BA == EXP_CP_BA</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Frequency Cap Impression">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Campaign Frequency Cap Impression assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign.ID Method - Get Campaign.ID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Frequency Cap Impression
def ACT_CP_FCI = json.data.campaign.frequencyCapImpression
log.info(ACT_CP_FCI)

//Store Expected Campaign Frequency Cap Impression  in array
EXP_CP_FCI = ["7"]

//Asserting if Expected Campaign Frequency Cap Impression matches to Actual Campaign Frequency Cap Impression
assert ACT_CP_FCI == EXP_CP_FCI</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Frequency Cap Level">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Campaign Frequency Cap Level assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign.ID Method - Get Campaign.ID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Frequency Cap Level
def ACT_CP_FCL = json.data.campaign.frequencyCapLevel
log.info(ACT_CP_FCL)

//Store Expected Campaign Frequency Cap Level  in array
EXP_CP_FCL = ["CAMPAIGN"]

//Asserting if Expected Campaign Frequency Cap Level matches to Actual Campaign Frequency Cap Level
assert ACT_CP_FCL == EXP_CP_FCL</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Display Formats">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Campaign Display Formats assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign.ID Method - Get Campaign.ID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Display Formats
def ACT_CP_DF = json.data.campaign.displayFormatId
log.info(ACT_CP_DF)

//Store Expected Campaign Display Formats  in array
EXP_CP_DF = ["1"]

//Asserting if Expected Campaign Display Formats matches to Actual Campaign Display Formats
assert ACT_CP_DF == EXP_CP_DF</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Name">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Campaign Name assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign.ID Method - Get Campaign.ID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Name
def ACT_CP_NM = json.data.campaign.name
log.info(ACT_CP_NM)

//Store Expected Campaign Name  in array
EXP_CP_NM = ["Cedars Sinai Flight 4 - Spine"]

//Asserting if Expected Campaign Name matches to Actual Campaign Name
assert ACT_CP_NM == EXP_CP_NM</scriptText>
              </con:configuration>
            </con:assertion>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get Campaign.CampaignGroupId TestCase" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Get Campaign.CampaignGroupId Method - Get Campaign.CampaignGroupId Request">
        <con:settings/>
        <con:config service="Campaign Service" resourcePath="/REST/campaign/" methodName="Get Campaign.CampaignGroupId Method" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get Campaign.CampaignGroupId Method - Get Campaign.CampaignGroupId Request" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
            </con:settings>
            <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
            <con:request/>
            <con:assertion type="Simple Contains" name="Contains">
              <con:configuration>
                <token>"status":"SUCCESS"</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400,401,402,404</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Sensitive Information Exposure" name="Sensitive Information Exposure">
              <con:configuration>
                <AssertionSpecificExposureList>Authorization###${#Project#Auth}</AssertionSpecificExposureList>
                <IncludeProjectSpecific>true</IncludeProjectSpecific>
                <IncludeGlobal>true</IncludeGlobal>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200,201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Group ID">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Campaign Group ID assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign.CampaignGroupId Method - Get Campaign.CampaignGroupId Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Group ID
def ACT_CPG_ID = json.data.campaign.campaignGroupId
log.info(ACT_CPG_ID)

//Store Expected Campaign  Group ID in array
EXP_CPG_ID = ["92"]

//Asserting if Expected Campaign Group ID matches to Actual Campaign Group ID
assert ACT_CPG_ID == EXP_CPG_ID</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Group Status">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Campaign Group Status assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign.CampaignGroupId Method - Get Campaign.CampaignGroupId Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Group Status
def ACT_CPG_ID = json.data.campaign.status
log.info(ACT_CPG_ID)

//Store Expected Campaign Group Status  in array
EXP_CPG_ID = ["PAUSED"]

//Asserting if Expected Campaign Group Status matches to Actual Campaign Group Status
assert ACT_CPG_ID == EXP_CPG_ID</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Group Budget Amount">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Campaign Group Budget Amount assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign.CampaignGroupId Method - Get Campaign.CampaignGroupId Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Group Budget Amount
def ACT_CPG_BA = json.data.campaign.budgetAmount
log.info(ACT_CPG_BA)

//Store Expected Campaign Group Budget Amount  in array
EXP_CPG_BA = ["1000000"]

//Asserting if Expected Campaign Group Budget Amount matches to Actual Campaign Group Budget Amount
assert ACT_CPG_BA == EXP_CPG_BA</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Group Frequency Cap Impression">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Campaign Group Frequency Cap Impression assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign.CampaignGroupId Method - Get Campaign.CampaignGroupId Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Group Frequency Cap Impression
def ACT_CPG_FCI = json.data.campaign.frequencyCapImpression
log.info(ACT_CPG_FCI)

//Store Expected Campaign Group  Frequency Cap Impression  in array
EXP_CPG_FCI = ["0"]

//Asserting if Expected Campaign Group Frequency Cap Impression matches to Actual Campaign Group Frequency Cap Impression
assert ACT_CPG_FCI == EXP_CPG_FCI</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Group Display Formats">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Campaign Group Display Formats assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign.CampaignGroupId Method - Get Campaign.CampaignGroupId Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Group Display Formats
def ACT_CPG_DF = json.data.campaign.displayFormatId
log.info(ACT_CPG_DF)

//Store Expected Campaign Group Display Formats  in array
EXP_CPG_DF = ["1"]

//Asserting if Expected Campaign Group Display Formats matches to Actual Campaign Group Display Formats
assert ACT_CPG_DF == EXP_CPG_DF</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Group Name">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Campaign Group Name assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign.CampaignGroupId Method - Get Campaign.CampaignGroupId Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Group Name
def ACT_CPG_NM = json.data.campaign.name
log.info(ACT_CPG_NM)

//Store Expected Campaign Group  Name  in array
EXP_CPG_NM = ["1_VIVIN_Test_123"]

//Asserting if Expected Campaign Group  Name matches to Actual Campaign Group Name
assert ACT_CPG_NM == EXP_CPG_NM</scriptText>
              </con:configuration>
            </con:assertion>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:properties/>
  </con:testSuite>
  <con:testSuite name="ADGroup Service API - TestSuite">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get AdGroupID TestCase" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Get AdGroupID Method - Get AdGroupID Request">
        <con:settings/>
        <con:config service="AdGroup Service" resourcePath="/REST/adgroup/{param0}" methodName="Get AdGroupID Method" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get AdGroupID Method - Get AdGroupID Request" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
            </con:settings>
            <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
            <con:request/>
            <con:assertion type="Simple Contains" name="Contains">
              <con:configuration>
                <token>"status":"SUCCESS"</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400,401,402,404</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Sensitive Information Exposure" name="Sensitive Information Exposure">
              <con:configuration>
                <AssertionSpecificExposureList>Authorization###${#Project#Auth}</AssertionSpecificExposureList>
                <IncludeProjectSpecific>true</IncludeProjectSpecific>
                <IncludeGlobal>true</IncludeGlobal>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200,201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - AD Group ID">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// AD Group ID assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get AdGroupID Method - Get AdGroupID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Ad Group ID
def ACT_ADG_ID = json.data.adgroup.id
log.info(ACT_ADG_ID)

//Store Expected AD  Group ID in array
EXP_ADG_ID = ["600"]

//Asserting if Expected AD Group ID matches to Actual AD Group ID
assert ACT_ADG_ID == EXP_ADG_ID</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - AD Group Name">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// AD Group Name assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get AdGroupID Method - Get AdGroupID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Ad Group Name
def ACT_ADG_NM = json.data.adgroup.name
log.info(ACT_ADG_NM)

//Store Expected AD  Group Name in array
EXP_ADG_NM = ["300x250 RTS"]

//Asserting if Expected AD Group Name  matches to Actual AD Group Name
assert ACT_ADG_NM == EXP_ADG_NM</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - AD Group Status">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// AD Group Status assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get AdGroupID Method - Get AdGroupID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual AD Group Status
def ACT_ADG_ST = json.data.adgroup.status
log.info(ACT_ADG_ST)

//Store Expected AD Group Status in array
EXP_ADG_ST = ["ENABLED"]

//Asserting if Expected AD Group Status  matches to Actual AD Group Status
assert ACT_ADG_ST == EXP_ADG_ST</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - AD Group MaxPrice">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// AD Group MaxPrice assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get AdGroupID Method - Get AdGroupID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual AD Group MaxPrice
def ACT_ADG_MP = json.data.adgroup.maxPrice
log.info(ACT_ADG_MP)

//Store Expected AD Group MaxPrice in array
EXP_ADG_MP = ["14"]

//Asserting if Expected AD Group MaxPrice  matches to Actual AD Group MaxPrice
assert ACT_ADG_MP == EXP_ADG_MP</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - AD Group AudienceId">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// AD Group AudienceId assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get AdGroupID Method - Get AdGroupID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual AD Group AudienceId
def ACT_ADG_AUDID = json.data.adgroup.audienceId
log.info(ACT_ADG_AUDID)

//Store Expected AD Group AudienceId in array
EXP_ADG_AUDID = ["11871,11870,11868,11869"]

//Asserting if Expected AD Group AudienceId  matches to Actual AD Group AudienceId
assert ACT_ADG_AUDID == EXP_ADG_AUDID</scriptText>
              </con:configuration>
            </con:assertion>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get ADGroup.CampaignID TestCase" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Get ADGroup.CampaignID Method - Get ADGroup.CampaignID Request">
        <con:settings/>
        <con:config service="AdGroup Service" resourcePath="/REST/adgroup/" methodName="Get ADGroup.CampaignID Method" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get ADGroup.CampaignID Method - Get ADGroup.CampaignID Request" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
            </con:settings>
            <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
            <con:request/>
            <con:assertion type="Simple Contains" name="Contains">
              <con:configuration>
                <token>"status":"SUCCESS"</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400,401,402,404</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Sensitive Information Exposure" name="Sensitive Information Exposure">
              <con:configuration>
                <AssertionSpecificExposureList>Authorization###${#Project#Auth}</AssertionSpecificExposureList>
                <IncludeProjectSpecific>true</IncludeProjectSpecific>
                <IncludeGlobal>true</IncludeGlobal>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200,201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - AD Group ID">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// ADGroup CampaignID assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get ADGroup.CampaignID Method - Get ADGroup.CampaignID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual ADGroup CampaignID
def ACT_ADG_CPID = json.data.adgroup.campaignId
log.info(ACT_ADG_CPID)

//Store Expected ADGroup CampaignID  in array
EXP_ADG_CPID = ["600"]

//Asserting if Expected ADGroup CampaignID matches to Actual ADGroup CampaignID
assert ACT_ADG_CPID == EXP_ADG_CPID</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - AD Group Name">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// AD Group Name assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get ADGroup.CampaignID Method - Get ADGroup.CampaignID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Ad Group Name
def ACT_ADG_NM = json.data.adgroup.name
log.info(ACT_ADG_NM)

//Store Expected AD  Group Name in array
EXP_ADG_NM = ["RTB-Curves-reg.complete-fitness"]

//Asserting if Expected AD Group Name  matches to Actual AD Group Name
assert ACT_ADG_NM == EXP_ADG_NM</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - AD Group Status">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// AD Group Status assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get ADGroup.CampaignID Method - Get ADGroup.CampaignID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual AD Group Status
def ACT_ADG_ST = json.data.adgroup.status
log.info(ACT_ADG_ST)

//Store Expected AD Group Status in array
EXP_ADG_ST = ["ENABLED"]

//Asserting if Expected AD Group Status  matches to Actual AD Group Status
assert ACT_ADG_ST == EXP_ADG_ST</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - AD Group MaxPrice">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// AD Group MaxPrice assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get ADGroup.CampaignID Method - Get ADGroup.CampaignID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual AD Group MaxPrice
def ACT_ADG_MP = json.data.adgroup.maxPrice
log.info(ACT_ADG_MP)

//Store Expected AD Group MaxPrice in array
EXP_ADG_MP = ["3"]

//Asserting if Expected AD Group MaxPrice  matches to Actual AD Group MaxPrice
assert ACT_ADG_MP == EXP_ADG_MP</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - AD Group AudienceId">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// AD Group AudienceId assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get ADGroup.CampaignID Method - Get ADGroup.CampaignID Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual AD Group AudienceId
def ACT_ADG_AUDID = json.data.adgroup.audienceId
log.info(ACT_ADG_AUDID)

//Store Expected AD Group AudienceId in array
EXP_ADG_AUDID = ["16295,16294,16298"]

//Asserting if Expected AD Group AudienceId  matches to Actual AD Group AudienceId
assert ACT_ADG_AUDID == EXP_ADG_AUDID</scriptText>
              </con:configuration>
            </con:assertion>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:properties/>
  </con:testSuite>
  <con:testSuite name="Audience Service API - TestSuite">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get Index TestCase" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Get Index Method - Get Index Request">
        <con:settings/>
        <con:config service="Audience Service" resourcePath="/REST/audience/{param0}" methodName="Get Index Method" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get Index Method - Get Index Request" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
            </con:settings>
            <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
            <con:request/>
            <con:assertion type="Simple Contains" name="Contains">
              <con:configuration>
                <token>"status":"SUCCESS"</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400,401,402,404</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Sensitive Information Exposure" name="Sensitive Information Exposure">
              <con:configuration>
                <AssertionSpecificExposureList>Authorization###${#Project#Auth}</AssertionSpecificExposureList>
                <IncludeProjectSpecific>true</IncludeProjectSpecific>
                <IncludeGlobal>true</IncludeGlobal>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200,201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Audience Name">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Audience  Name assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Index Method - Get Index Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Audience  Name
def ACT_AUD_NM = json.data.audience.'18752'.name
log.info(ACT_AUD_NM)

//Get Actual Audience  Type
def ACT_AUD_TYP = json.data.audience.'18752'.type
log.info(ACT_AUD_TYP)


//Store Expected Audience  Name
EXP_AUD_NM = "RT-aud20130923-03.so"

//Store Expected Audience  Type
EXP_AUD_TYP = "RT"


if (ACT_AUD_NM == EXP_AUD_NM &amp;&amp; ACT_AUD_TYP == EXP_AUD_TYP )

assert true: "Audience Name &amp; Audience Type found"

else

assert false: "Audience Name &amp; Audience Type not found"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Audience ADX Network">
              <con:configuration>
                <scriptText><![CDATA[//*******************************************************************************************************************************************
// Audience ADX Network assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Index Method - Get Index Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//*******************************************************************************************************************************************
//Audience ADX Network ID
//*******************************************************************************************************************************************
//Get Actual Audience ADX Network ID
def ACT_AUD_ADX = json.data.audience.'18752'.network.ADX.networkAudId
log.info(ACT_AUD_ADX)

//Store Expected Audience ADX Network ID
EXP_AUD_ADX = "4925100"
//*******************************************************************************************************************************************


//*******************************************************************************************************************************************
//Audience ADX Network Pixel
//*******************************************************************************************************************************************
//Get Actual Audience ADX Network Pixel
def ACT_AUD_ADX_PX = json.data.audience.'18752'.network.ADX.pixel
log.info(ACT_AUD_ADX_PX)

//Store Expected Audience ADX Network Pixel
EXP_AUD_ADX_PX = "jPj1CNTHuggQnM2l7gM"
//*******************************************************************************************************************************************


//*******************************************************************************************************************************************
//Audience ADX Network RTName
//*******************************************************************************************************************************************
//Get Actual Audience ADX Network RTName
def ACT_AUD_ADX_RT = json.data.audience.'18752'.network.ADX.rtName
log.info(ACT_AUD_ADX_RT)

//Store Expected Audience ADX Network RTName
EXP_AUD_ADX_RT = "0gcY"
//*******************************************************************************************************************************************


//*******************************************************************************************************************************************
//Audience ADX Network ISSecure
//*******************************************************************************************************************************************
//Get Actual Audience ADX Network ISSecure
def ACT_AUD_ADX_SEC = json.data.audience.'18752'.network.ADX.isSecure
log.info(ACT_AUD_ADX_SEC)

//Store Expected Audience ADX Network ISSecure
EXP_AUD_ADX_SEC = "0"
//*******************************************************************************************************************************************


if (ACT_AUD_ADX == EXP_AUD_ADX && ACT_AUD_ADX_PX == EXP_AUD_ADX_PX && ACT_AUD_ADX_RT == EXP_AUD_ADX_RT && ACT_AUD_ADX_SEC == EXP_AUD_ADX_SEC)

assert true: "Audience with ADX neytwork found"

else

assert false: "Audience with ADX neytwork not found"]]></scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Audience ANX Network">
              <con:configuration>
                <scriptText><![CDATA[//*******************************************************************************************************************************************
// Audience ANX Network assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Index Method - Get Index Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//*******************************************************************************************************************************************
//Audience ANX Network ID
//*******************************************************************************************************************************************
//Get Actual Audience ANX Network ID
def ACT_AUD_ANX = json.data.audience.'18752'.network.ANX.networkAudId
log.info(ACT_AUD_ANX)

//Store Expected Audience ANX Network ID
EXP_AUD_ANX = "1031664"
//*******************************************************************************************************************************************


//*******************************************************************************************************************************************
//Audience ANX Network Pixel
//*******************************************************************************************************************************************
//Get Actual Audience ANX Network Pixel
def ACT_AUD_ANX_PX = json.data.audience.'18752'.network.ANX.pixel
log.info(ACT_AUD_ANX_PX)

//Store Expected Audience ANX Network Pixel
EXP_AUD_ANX_PX = "1031664"
//*******************************************************************************************************************************************


//*******************************************************************************************************************************************
//Audience ANX Network RTName
//*******************************************************************************************************************************************
//Get Actual Audience ANX Network RTName
def ACT_AUD_ANX_RT = json.data.audience.'18752'.network.ANX.rtName
log.info(ACT_AUD_ANX_RT)

//Store Expected Audience ANX Network RTName
EXP_AUD_ANX_RT = "0gcj"
//*******************************************************************************************************************************************


//*******************************************************************************************************************************************
//Audience ANX Network ISSecure
//*******************************************************************************************************************************************
//Get Actual Audience ANX Network ISSecure
def ACT_AUD_ANX_SEC = json.data.audience.'18752'.network.ANX.isSecure
log.info(ACT_AUD_ANX_SEC)

//Store Expected Audience ANX Network ISSecure
EXP_AUD_ANX_SEC = "0"
//*******************************************************************************************************************************************


if (ACT_AUD_ANX == EXP_AUD_ANX && ACT_AUD_ANX_PX == EXP_AUD_ANX_PX && ACT_AUD_ANX_RT == EXP_AUD_ANX_RT && ACT_AUD_ANX_SEC == EXP_AUD_ANX_SEC)

assert true: "Audience with ANX neytwork found"

else

assert false: "Audience with ANX neytwork not found"]]></scriptText>
              </con:configuration>
            </con:assertion>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get Audience.RTName TestCase" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Get Audience.RTName Method - Get Audience.RTName Request">
        <con:settings/>
        <con:config service="Audience Service" resourcePath="/REST/audience/" methodName="Get Audience.RTName Method" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get Audience.RTName Method - Get Audience.RTName Request" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
            </con:settings>
            <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
            <con:request/>
            <con:originalUri>http://adops1007.qa.sharethis.com/REST/audience/</con:originalUri><con:assertion type="Simple Contains" name="Contains">
              <con:configuration>
                <token>"status":"SUCCESS"</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400,401,402,404</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Sensitive Information Exposure" name="Sensitive Information Exposure">
              <con:configuration>
                <AssertionSpecificExposureList>Authorization###${#Project#Auth}</AssertionSpecificExposureList>
                <IncludeProjectSpecific>true</IncludeProjectSpecific>
                <IncludeGlobal>true</IncludeGlobal>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200,201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Audience Name" disabled="true">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Audience  Name assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Audience.RTName Method - Get Audience.RTName Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Audience  Name
def ACT_AUD_NM = json.data.audience.'1370'.name
log.info(ACT_AUD_NM)

//Get Actual Audience  Type
def ACT_AUD_TYP = json.data.audience.'1370'.type
log.info(ACT_AUD_TYP)


//Store Expected Audience  Name
EXP_AUD_NM = "CNV-Vivin_Test_Conversion-purchase.cnv"

//Store Expected Audience  Type
EXP_AUD_TYP = "Conversion"


if (ACT_AUD_NM == EXP_AUD_NM &amp;&amp; ACT_AUD_TYP == EXP_AUD_TYP )

assert true: "Audience Name &amp; Audience Type found"

else

assert false: "Audience Name &amp; Audience Type not found"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Audience ADX Network" disabled="true">
              <con:configuration>
                <scriptText><![CDATA[//*******************************************************************************************************************************************
// Audience ADX Network assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Audience.RTName Method - Get Audience.RTName Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//*******************************************************************************************************************************************
//Audience ADX Network ID
//*******************************************************************************************************************************************
//Get Actual Audience ADX Network ID
def ACT_AUD_ADX = json.data.audience.'1370'.network.ADX.networkAudId
log.info(ACT_AUD_ADX)

//Store Expected Audience ADX Network ID
EXP_AUD_ADX = "1564020"
//*******************************************************************************************************************************************


//*******************************************************************************************************************************************
//Audience ADX Network Pixel
//*******************************************************************************************************************************************
//Get Actual Audience ADX Network Pixel
def ACT_AUD_ADX_PX = json.data.audience.'1370'.network.ADX.pixel
log.info(ACT_AUD_ADX_PX)

//Store Expected Audience ADX Network Pixel
EXP_AUD_ADX_PX = "QIQsCKT_qwMQnM2l7gM"
//*******************************************************************************************************************************************


//*******************************************************************************************************************************************
//Audience ADX Network RTName
//*******************************************************************************************************************************************
//Get Actual Audience ADX Network RTName
def ACT_AUD_ADX_RT = json.data.audience.'1370'.network.ADX.rtName
log.info(ACT_AUD_ADX_RT)

//Store Expected Audience ADX Network RTName
EXP_AUD_ADX_RT = "GJ"
//*******************************************************************************************************************************************


//*******************************************************************************************************************************************
//Audience ADX Network ISSecure
//*******************************************************************************************************************************************
//Get Actual Audience ADX Network ISSecure
def ACT_AUD_ADX_SEC = json.data.audience.'1370'.network.ADX.isSecure
log.info(ACT_AUD_ADX_SEC)

//Store Expected Audience ADX Network ISSecure
EXP_AUD_ADX_SEC = null
//*******************************************************************************************************************************************


if (ACT_AUD_ADX == EXP_AUD_ADX && ACT_AUD_ADX_PX == EXP_AUD_ADX_PX && ACT_AUD_ADX_RT == EXP_AUD_ADX_RT && ACT_AUD_ADX_SEC == EXP_AUD_ADX_SEC)

assert true: "Audience with ADX neytwork found"

else

assert false: "Audience with ADX neytwork not found"]]></scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:properties/>
  </con:testSuite>
  <con:testSuite name="Report Service TestSuite">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get SocialLift TestCase" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Get SocialLift Method - Get SocialLift Request">
        <con:settings/>
        <con:config service="Report Service" resourcePath="/REST/report/socialLift/{param0}" methodName="Get SocialLift Method" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get SocialLift Method - Get SocialLift Request" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
            </con:settings>
            <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
            <con:request/>
            <con:assertion type="Simple Contains" name="Contains">
              <con:configuration>
                <token>"status":"SUCCESS"</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400,401,402,404</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Sensitive Information Exposure" name="Sensitive Information Exposure">
              <con:configuration>
                <AssertionSpecificExposureList>Authorization###${#Project#Auth}</AssertionSpecificExposureList>
                <IncludeProjectSpecific>true</IncludeProjectSpecific>
                <IncludeGlobal>true</IncludeGlobal>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200,201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Social Lift Length" disabled="true">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Social Lift Length assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get SocialLift Method - Get SocialLift Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Social Lift Length
def ACT_SOC_LT = json.data.report.socialLift.week.size()
log.info(ACT_SOC_LT)

//Expected Social Lift Length
EXP_SOC_LT = 10

//Compare Expected Social Lift Length with Actual Social Lift Length
assert ACT_SOC_LT == EXP_SOC_LT</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Social Lift Week 1 SocialChannel" disabled="true">
              <con:configuration>
                <scriptText><![CDATA[//*******************************************************************************************************************************************
// Social Lift Week 1 assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get SocialLift Method - Get SocialLift Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Social Lift Week 1 Start Date
def ACT_SOC_STD = json.data.report.socialLift.week.'1'.startDate
log.info( ACT_SOC_STD)

//ExpectedSocial Lift Week 1 Start Date
EXP_SOC_STD = "2013-06-02"

//Get Actual Social Lift Week 1 EndDate
def ACT_SOC_ETD = json.data.report.socialLift.week.'1'.endDate
log.info( ACT_SOC_ETD)

//Expected Social Lift Week 1 EndDate
EXP_SOC_ETD = "2013-06-08"



//Get Actual Social Lift Week 1 SocialB4Exposed
def ACT_SOC_B4 = json.data.report.socialLift.week.'1'.socialB4Exposed
log.info( ACT_SOC_B4)

//Expected Social Lift Week 1 SocialB4Exposed
EXP_SOC_B4 = 94



//Get Actual Social Lift Week 1 SocialAfExposed
def ACT_SOC_AF = json.data.report.socialLift.week.'1'.socialAfExposed
log.info( ACT_SOC_AF)

//Expected Social Lift Week 1 SocialAfExposed
EXP_SOC_AF = 213

if (ACT_SOC_STD == EXP_SOC_STD && ACT_SOC_ETD == EXP_SOC_ETD && ACT_SOC_B4 == EXP_SOC_B4 && ACT_SOC_AF == EXP_SOC_AF)

assert true: "Week 1 Data is correct"

else

assert false: "Week 1 Data is not correct"]]></scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Social Lift Week 1 SocialChannel.Blogger" disabled="true">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Social Lift Week 1 SocialChannel.Blogger assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get SocialLift Method - Get SocialLift Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Social Lift Week 1 SocialChannel blogger.B4
def ACT_SOC_B4 = json.data.report.socialLift.week.'1'.socialChannel.blogger.b4
log.info( ACT_SOC_B4)

//ExpectedSocial Lift Week 1 SocialChannel blogger.B4
EXP_SOC_B4 = 6


//Get Actual Social Lift Week 1 SocialChannel blogger.AF
def ACT_SOC_AF = json.data.report.socialLift.week.'1'.socialChannel.blogger.af
log.info( ACT_SOC_AF)

//ExpectedSocial Lift Week 1 SocialChannel blogger.AF
EXP_SOC_AF = 44


if (ACT_SOC_B4 == EXP_SOC_B4 &amp;&amp; ACT_SOC_AF == EXP_SOC_AF )

assert true: "Week 1 SocialChannel Data is correct"

else

assert false: "Week 1 SocialChannel  Data is not correct"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Social Lift Week 1 SearchChannel" disabled="true">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Social Lift Week 1 SearchChannel  assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get SocialLift Method - Get SocialLift Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Social Lift Week 1 SearchB4Exposed
def ACT_SOC_B4 = json.data.report.socialLift.week.'1'.searchB4Exposed
log.info( ACT_SOC_B4)

//Expected Social Lift Week 1 SearchB4Exposed
EXP_SOC_B4 = 332



//Get Actual Social Lift Week 1 SearchAfExposed
def ACT_SOC_AF = json.data.report.socialLift.week.'1'.searchAfExposed
log.info( ACT_SOC_AF)

//Expected Social Lift Week 1 SearchAfExposed
EXP_SOC_AF = 471

if (ACT_SOC_B4 == EXP_SOC_B4 &amp;&amp; ACT_SOC_AF == EXP_SOC_AF)

assert true: "Week 1 SearchChannel Data is correct"

else

assert false: "Week 1 SearchChannel Data is not correct"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Social Lift Week 1 SearchChannel.Google Search" disabled="true">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// Social Lift Week 1 SearchChannel.Google Search assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get SocialLift Method - Get SocialLift Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Social Lift Week 1 SearchChannel.Google Search.B4
def ACT_SOC_B4 = json.data.report.socialLift.week.'1'.searchChannel.'google search'.b4
log.info( ACT_SOC_B4)

//Expected Social Lift Week 1 SearchChannel.Google Search.B4
EXP_SOC_B4 = 282


//Get Actual Social Lift Week 1 SearchChannel.Google Search.AF
def ACT_SOC_AF = json.data.report.socialLift.week.'1'.searchChannel.'google search'.af
log.info( ACT_SOC_AF)

//Expected Social Lift Week 1 SearchChannel.Google Search.AF
EXP_SOC_AF = 409


if (ACT_SOC_B4 == EXP_SOC_B4 &amp;&amp; ACT_SOC_AF == EXP_SOC_AF )

assert true: "Week 1 SearchChannel Data is correct"

else

assert false: "Week 1 SearchChannell  Data is not correct"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Social Lift Week 10 SocialChannel" disabled="true">
              <con:configuration>
                <scriptText><![CDATA[//*******************************************************************************************************************************************
// Social Lift Week 10 assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get SocialLift Method - Get SocialLift Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Social Lift Week 1 Start Date
def ACT_SOC_STD = json.data.report.socialLift.week.'10'.startDate
log.info( ACT_SOC_STD)

//ExpectedSocial Lift Week 1 Start Date
EXP_SOC_STD = "2013-08-04"

//Get Actual Social Lift Week 1 EndDate
def ACT_SOC_ETD = json.data.report.socialLift.week.'10'.endDate
log.info( ACT_SOC_ETD)

//Expected Social Lift Week 1 EndDate
EXP_SOC_ETD = "2013-08-10"



//Get Actual Social Lift Week 1 SocialB4Exposed
def ACT_SOC_B4 = json.data.report.socialLift.week.'10'.socialB4Exposed
log.info( ACT_SOC_B4)

//Expected Social Lift Week 1 SocialB4Exposed
EXP_SOC_B4 = 0



//Get Actual Social Lift Week 1 SocialAfExposed
def ACT_SOC_AF = json.data.report.socialLift.week.'10'.socialAfExposed
log.info( ACT_SOC_AF)

//Expected Social Lift Week 1 SocialAfExposed
EXP_SOC_AF = 0

if (ACT_SOC_STD == EXP_SOC_STD && ACT_SOC_ETD == EXP_SOC_ETD && ACT_SOC_B4 == EXP_SOC_B4 && ACT_SOC_AF == EXP_SOC_AF)

assert true: "Week 1 Data is correct"

else

assert false: "Week 1 Data is not correct"]]></scriptText>
              </con:configuration>
            </con:assertion>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get SocialLiftByChannel TestCase" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Get SocialLiftByChannel Method - Get SocialLiftByChannel Request">
        <con:settings/>
        <con:config service="Report Service" resourcePath="/REST/report/socialLiftByChannel/{param0}" methodName="Get SocialLiftByChannel Method" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get SocialLiftByChannel Method - Get SocialLiftByChannel Request" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
            </con:settings>
            <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
            <con:request/>
            <con:assertion type="Simple Contains" name="Contains">
              <con:configuration>
                <token>"status":"SUCCESS"</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400,401,402,404</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Sensitive Information Exposure" name="Sensitive Information Exposure">
              <con:configuration>
                <AssertionSpecificExposureList>Authorization###${#Project#Auth}</AssertionSpecificExposureList>
                <IncludeProjectSpecific>true</IncludeProjectSpecific>
                <IncludeGlobal>true</IncludeGlobal>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200,201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - SocialLiftByChannel Length" disabled="true">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// SocialLiftByChannel Length assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get SocialLiftByChannel Method - Get SocialLiftByChannel Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual SocialLiftByChannel.SocialChannel Length
def ACT_SOC_LT = json.data.report.socialLiftByChannel.socialChannel.size()
log.info(ACT_SOC_LT)

//Expected SocialLiftByChannel.SocialChannel Length
EXP_SOC_LT = 19

//Get Actual SocialLiftByChannel.SearchChannel Length
def ACT_SEC_LT = json.data.report.socialLiftByChannel.searchChannel.size()
log.info(ACT_SEC_LT)

//Expected  SocialLiftByChannel.SearchChannel Length
EXP_SEC_LT = 7

if (ACT_SOC_LT == EXP_SOC_LT &amp;&amp; ACT_SEC_LT == EXP_SEC_LT )

assert true: "Social Lift by Channel &amp; Search by Channel data is correct"

else

assert false: "Social Lift by Channel &amp; Search by Channel data is not correct"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - SocialLiftByChannel.SocialChannel.Twitter.B4-AF" disabled="true">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// SocialLiftByChannel.SocialChannel.Twitter.B4-AF assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get SocialLiftByChannel Method - Get SocialLiftByChannel Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual SocialLiftByChannel.SocialChannel.twitter B4 values
def ACT_SOC_TWB4 = json.data.report.socialLiftByChannel.socialChannel.twitter.b4
log.info( ACT_SOC_TWB4 )

//Expected SocialLiftByChannel.SocialChannel.twitter B4 values
EXP_SOC_TWB4 = 1

//Get Actual SocialLiftByChannel.SocialChannel.twitter AF values
def ACT_SOC_TWAF = json.data.report.socialLiftByChannel.socialChannel.twitter.af
log.info( ACT_SOC_TWAF )

//Expected SocialLiftByChannel.SocialChannel.twitter AF values
EXP_SOC_TWAF = 8

if (ACT_SOC_TWB4 == EXP_SOC_TWB4  &amp;&amp;  ACT_SOC_TWAF == EXP_SOC_TWAF)

assert true: "SocialLiftByChannel.SocialChannel.twitter B4 &amp; After values are correct"

else

assert false: "SocialLiftByChannel.SocialChannel.twitter B4 &amp; After values are not correct"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - SocialLiftByChannel.SocialChannel.Facebook.B4-AF" disabled="true">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// SocialLiftByChannel.SocialChannel.Facebook.B4-AF assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get SocialLiftByChannel Method - Get SocialLiftByChannel Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual SocialLiftByChannel.SocialChannel.Facebook B4 values
def ACT_SOC_TWB4 = json.data.report.socialLiftByChannel.socialChannel.facebook.b4
log.info( ACT_SOC_TWB4 )

//Expected SocialLiftByChannel.SocialChannel.Facebook B4 values
EXP_SOC_TWB4 = 12

//Get Actual SocialLiftByChannel.SocialChannel.Facebook AF values
def ACT_SOC_TWAF = json.data.report.socialLiftByChannel.socialChannel.facebook.af
log.info( ACT_SOC_TWAF )

//Expected SocialLiftByChannel.SocialChannel.Facebook AF values
EXP_SOC_TWAF = 45

if (ACT_SOC_TWB4 == EXP_SOC_TWB4  &amp;&amp;  ACT_SOC_TWAF == EXP_SOC_TWAF)

assert true: "SocialLiftByChannel.SocialChannel.Facebook B4 &amp; After values are correct"

else

assert false: "SocialLiftByChannel.SocialChannel.Facebook B4 &amp; After values are not correct"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - SocialLiftByChannel.SearchChannel.Google Search.B4-AF" disabled="true">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// SocialLiftByChannel.SearchChannel.Google Search.B4-AF assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get SocialLiftByChannel Method - Get SocialLiftByChannel Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual SocialLiftByChannel.SearchChannel.Google Search B4 values
def ACT_SOC_GSB4 = json.data.report.socialLiftByChannel.searchChannel.'google search'.b4
log.info( ACT_SOC_GSB4 )

//Expected SocialLiftByChannel.SearchChannel.Google Search B4 values
EXP_SOC_GSB4 = 36

//Get Actual SocialLiftByChannel.SearchChannel.Google Search AF values
def ACT_SOC_GSAF = json.data.report.socialLiftByChannel.searchChannel.'google search'.af
log.info( ACT_SOC_GSAF )

//Expected SocialLiftByChannel.SearchChannel.Google Search AF values
EXP_SOC_GSAF = 149

if (ACT_SOC_GSB4 == EXP_SOC_GSB4  &amp;&amp;  ACT_SOC_GSAF == EXP_SOC_GSAF)

assert true: "SocialLiftByChannel.SearchChannel.Google Search B4 &amp; After values are correct"

else

assert false: "SocialLiftByChannel.SearchChannel.Google Search B4 &amp; After values are not correct"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - SocialLiftByChannel.SearchChannel.Google_Bmarks.B4-AF" disabled="true">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
// SocialLiftByChannel.SearchChannel.Google_Bmarks.B4-AF assertion
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get SocialLiftByChannel Method - Get SocialLiftByChannel Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual SocialLiftByChannel.SearchChannel.Google_Bmarks B4 values
def ACT_SOC_GBB4 = json.data.report.socialLiftByChannel.searchChannel.'google_bmarks'.b4
log.info( ACT_SOC_GBB4 )

//Expected SocialLiftByChannel.SearchChannel.Google_Bmarks B4 values
EXP_SOC_GBB4 = 0

//Get Actual SocialLiftByChannel.SearchChannel.Google_Bmarks AF values
def ACT_SOC_GBAF = json.data.report.socialLiftByChannel.searchChannel.'google_bmarks'.af
log.info( ACT_SOC_GBAF )

//Expected SocialLiftByChannel.SearchChannel.Google_Bmarks AF values
EXP_SOC_GBAF = 1

if (ACT_SOC_GBB4 == EXP_SOC_GBB4  &amp;&amp;  ACT_SOC_GBAF == EXP_SOC_GBAF)

assert true: "SocialLiftByChannel.SearchChannel.Google_Bmarks B4 &amp; After values are correct"

else

assert false: "SocialLiftByChannel.SearchChannel.Google_Bmarks B4 &amp; After values are not correct"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get Audience Size TestCase" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Get Audience Size Method - Get Audience Size Request">
        <con:settings/>
        <con:config service="Report Service" resourcePath="/REST/report/audienceSize/20582,20580" methodName="Get Audience Size Method" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get Audience Size Method - Get Audience Size Request" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
            </con:settings>
            <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
            <con:request/>
            <con:assertion type="Simple Contains" name="Contains">
              <con:configuration>
                <token>"status":"SUCCESS"</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400,401,402,404</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Sensitive Information Exposure" name="Sensitive Information Exposure">
              <con:configuration>
                <AssertionSpecificExposureList>Authorization###${#Project#Auth}</AssertionSpecificExposureList>
                <IncludeProjectSpecific>true</IncludeProjectSpecific>
                <IncludeGlobal>true</IncludeGlobal>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200,201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Audience Size Length" disabled="true">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion - Audience Size Length
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Audience Size Method - Get Audience Size Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Audience Size Length
def ACT_ASZ = json.data.report.audienceSize.size()
log.info( ACT_ASZ )

//Expected SocialLiftByChannel.SearchChannel.Google_Bmarks B4 values
EXP_ASZ = 2

if (ACT_ASZ == EXP_ASZ)

assert true: "Audience Size is correct"

else

assert false: "Audience Size is not correct"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Audience Name" disabled="true">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion - Audience Name
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Audience Size Method - Get Audience Size Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Audience (20580) Name
def ACT_ANM1 = json.data.report.audienceSize.'20580'.name
log.info( ACT_ANM1 )

//Expected Audience (20580) Name
EXP_ANM1 = 'RT-FBFS_SecureHomepage.so'

//Get Actual Audience (20582) Name
def ACT_ANM2 = json.data.report.audienceSize.'20582'.name
log.info( ACT_ANM2 )

//Expected Audience (20582) Name
EXP_ANM2 = 'RT-AcademySports_Homepage.so'



if (ACT_ANM1 == EXP_ANM1 &amp;&amp; ACT_ANM2 == EXP_ANM2 )

assert true: "Audience names are correct"

else

assert false: "Audience names are not correct"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Audience (20580) Size ADX Network">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion - Audience (20580) ADX Network values
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Audience Size Method - Get Audience Size Request#Response}' ).toString()
log.info(response)
def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Audience Network (ADX) value
def ACT_ADXNW1 = json.data.report.audienceSize.'20580'.network.ADX
log.info( ACT_ADXNW1 )

if (ACT_ADXNW1 != null)

assert true: "Audience (20580) ADX Network value is present"

else

assert false: "Audience (20580) ADX Network value is not present"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Audience (20580) Size ANX Network">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion - Audience (20580) Size ANX Network values
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Audience Size Method - Get Audience Size Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Audience Network (ANX) value
def ACT_ANXNW1 = json.data.report.audienceSize.'20580'.network.ANX
log.info( ACT_ANXNW1 )

if (ACT_ANXNW1 !=  null)

assert true: "Audience (20580) ANX Network value is present"

else

assert false: "Audience (20580) ANX Network value is not present"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Audience (20582) ANX Network">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion - Audience (20582) ANX Network values
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Audience Size Method - Get Audience Size Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Audience Network (ANX) value
def ACT_ANXNW1 = json.data.report.audienceSize.'20582'.network.ANX
log.info( ACT_ANXNW1 )

if (ACT_ANXNW1 != null)

assert true: "Audience (20582) ANX Network value is present"

else

assert false: "Audience (20582) ANX Network value is not present"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Audience (20582) ADX Network">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion - Audience (20582) ADX Network values
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Audience Size Method - Get Audience Size Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Audience (20582) ADX Network values
def ACT_ADXNW1 = json.data.report.audienceSize.'20582'.network.ADX
log.info( ACT_ADXNW1 )

if (ACT_ADXNW1 != null)

assert true: "Audience (20582) ADX Network value is present"

else

assert false: "Audience (20582) ADX Network value is not present"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get Pixel TestCase" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Get Pixel Method - Get Pixel Request">
        <con:settings/>
        <con:config service="Report Service" resourcePath="/REST/report/pixel/mn9" methodName="Get Pixel Method" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get Pixel Method - Get Pixel Request" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
            </con:settings>
            <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
            <con:request/>
            <con:assertion type="Simple Contains" name="Contains">
              <con:configuration>
                <token>"status":"SUCCESS"</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400,401,402,404</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Sensitive Information Exposure" name="Sensitive Information Exposure">
              <con:configuration>
                <AssertionSpecificExposureList>Authorization###${#Project#Auth}</AssertionSpecificExposureList>
                <IncludeProjectSpecific>true</IncludeProjectSpecific>
                <IncludeGlobal>true</IncludeGlobal>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200,201</codes>
              </con:configuration>
            </con:assertion>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get Campaign Social Interest TestCase" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Get Campaign Social Interest Method - Get Campaign Social Interest Request">
        <con:settings/>
        <con:config service="Report Service" resourcePath="/REST/report/campaignSocialInterest/{param0}" methodName="Get Campaign Social Interest Method" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get Campaign Social Interest Method - Get Campaign Social Interest Request" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
            </con:settings>
            <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
            <con:request/>
            <con:assertion type="Simple Contains" name="Contains">
              <con:configuration>
                <token>"status":"SUCCESS"</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400,401,402,404</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Sensitive Information Exposure" name="Sensitive Information Exposure">
              <con:configuration>
                <AssertionSpecificExposureList>Authorization###${#Project#Auth}</AssertionSpecificExposureList>
                <IncludeProjectSpecific>true</IncludeProjectSpecific>
                <IncludeGlobal>true</IncludeGlobal>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200,201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Social Interest TotalCategoryViewerCount">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion - Campaign Social Interest Total Category Viewer Count
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign Social Interest Method - Get Campaign Social Interest Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Social Interest Total Category Viewer Count
def ACT_TCVC = json.data.report.socialInterest.totalCategoryViewerCount
log.info( ACT_TCVC )

if (ACT_TCVC != null)

assert true: "Campaign Social Interest TotalCategoryViewerCount is present"

else

assert false: "Campaign Social Interest TotalCategoryViewerCount is not present"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Social Interest Total Category Clicker Count">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion - Campaign Social Interest Total Category Clicker Count
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign Social Interest Method - Get Campaign Social Interest Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Social Interest Total Category Clicker Count
def ACT_TCCC = json.data.report.socialInterest.totalCategoryClickerCount
log.info( ACT_TCCC )

if (ACT_TCCC != null)

assert true: "Campaign Social Interest Total Category Clicker Count is present"

else

assert false: "Campaign Social Interest Total Category Clicker Count is not present"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Social Interest Viewer Data">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion - Campaign Social Interest Viewer Data
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign Social Interest Method - Get Campaign Social Interest Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Social Interest Viewer Data
def ACT_VD = json.data.report.socialInterest.viewerData
log.info( ACT_VD )

if (ACT_VD != null)

assert true: "Campaign Social Interest Viewer Data is present"

else

assert false: "Campaign Social Interest Viewer Data is not present"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Social Interest Clicker Data">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion - Campaign Social Interest Clicker Data
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign Social Interest Method - Get Campaign Social Interest Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Social Interest Clicker Data
def ACT_CD = json.data.report.socialInterest.clickerData
log.info( ACT_CD )

if (ACT_CD != null)

assert true: "Campaign Social Interest Clicker Data is correct"

else

assert false: "Campaign Social Interest Clicker Data is not correct"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get Campaign Social Interest Date Check TestCase" searchProperties="true" id="b3860ebe-8802-4dec-a51d-b42220186d1c">
      <con:settings/>
      <con:testStep type="restrequest" name="Get Campaign Social Interest Date Check Method - Get Campaign Social Interest Date Check Request">
        <con:settings/>
        <con:config service="Report Service" resourcePath="/REST/report/campaignSocialInterest/{param0}" methodName="Get Campaign Social Interest Date Check Method" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get Campaign Social Interest Date Check Method - Get Campaign Social Interest Date Check Request" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
            </con:settings>
            <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
            <con:request/>
            <con:assertion type="Simple Contains" name="Contains">
              <con:configuration>
                <token>"status":"SUCCESS"</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400,401,402,404</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Sensitive Information Exposure" name="Sensitive Information Exposure">
              <con:configuration>
                <AssertionSpecificExposureList>Authorization###sharethis_admin</AssertionSpecificExposureList>
                <IncludeProjectSpecific>true</IncludeProjectSpecific>
                <IncludeGlobal>true</IncludeGlobal>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200,201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Social Interest Total Category Viewer Count - Date Check" disabled="true">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion - Campaign Social Interest Total Category Viewer Count - Date Check
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign Social Interest Date Check Method - Get Campaign Social Interest Date Check Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Social Interest Total Category Viewer Count - Date Check
def ACT_TCVC = json.data.report.socialInterest.totalCategoryViewerCount
log.info( ACT_TCVC )

//Expected Campaign Social Interest Total Category Viewer Count - Date Check
EXP_TCVC = 7459

if (ACT_TCVC == EXP_TCVC)

assert true: "Campaign Social Interest Total Category Viewer Count - Date Check is correct"

else

assert false: "Campaign Social Interest Total Category Viewer Count - Date Check is not correct"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Social Interest Total Category Clicker Count - Date Check" disabled="true">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion - Campaign Social Interest Total Category Clicker Count - Date Check
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign Social Interest Date Check Method - Get Campaign Social Interest Date Check Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Social Interest Total Category Clicker Count - Date Check
def ACT_TCCC = json.data.report.socialInterest.totalCategoryClickerCount
log.info( ACT_TCCC )

//Expected Campaign Social Interest Total Category Clicker Count - Date Check
EXP_TCCC = 15

if (ACT_TCCC == EXP_TCCC)

assert true: "Campaign Social Interest Total Category Clicker Count - Date Check is correct"

else

assert false: "Campaign Social Interest Total Category Clicker Count - Date Check is not correct"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Social Interest Viewer Data - Date Check">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion - Campaign Social Interest Viewer Data - Date Check
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign Social Interest Date Check Method - Get Campaign Social Interest Date Check Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Social Interest Viewer Data - Date Check
def ACT_VD = json.data.report.socialInterest.viewerData
log.info( ACT_VD )

if (ACT_VD != null)

assert true: "Campaign Social Interest Viewer Data - Date Check is correct"

else

assert false: "Campaign Social Interest Viewer Data - Date Check is not correct"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Social Interest Clicker Data - Date Check">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion - Campaign Social Interest Clicker Data - Date Check
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign Social Interest Date Check Method - Get Campaign Social Interest Date Check Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Social Interest Clicker Data - Date Check
def ACT_CD = json.data.report.socialInterest.clickerData
log.info( ACT_CD )

if (ACT_CD != null)

assert true: "Campaign Social Interest Clicker Data - Date Check is correct"

else

assert false: "Campaign Social Interest Clicker Data - Date Check is not correct"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="end" value="2013-10-08" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get Campaign Search TestCase" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Get Campaign Search Method - Get Campaign Search Request">
        <con:settings/>
        <con:config service="Report Service" resourcePath="/REST/report/campaignSearch/73" methodName="Get Campaign Search Method" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get Campaign Search Method - Get Campaign Search Request" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
            </con:settings>
            <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
            <con:request/>
            <con:assertion type="Simple Contains" name="Contains">
              <con:configuration>
                <token>"status":"SUCCESS"</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400,401,402,404</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Sensitive Information Exposure" name="Sensitive Information Exposure">
              <con:configuration>
                <AssertionSpecificExposureList>Authorization###${#Project#Auth}</AssertionSpecificExposureList>
                <IncludeProjectSpecific>true</IncludeProjectSpecific>
                <IncludeGlobal>true</IncludeGlobal>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200,201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Search - Total Count">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion - Campaign Search - Total Count
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign Search Method - Get Campaign Search Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Search - Total Count
def ACT_CS = json.data.report.campaignSearch.totalCount
log.info( ACT_CS )

if (ACT_CS != null)

assert true: "The Total Count value is present"

else

assert false: "The Total Count value is not present"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Search - Data">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion - Campaign Search - Data
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign Search Method - Get Campaign Search Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Search - Data
def ACT_DT = json.data.report.campaignSearch.data
log.info( ACT_DT )

if (ACT_DT != null)

assert true: "The Data value is present"

else

assert false: "The Data value is not present"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Search - Data - Google Search">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion - Campaign Search - Data - Google Search
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign Search Method - Get Campaign Search Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Search - Data - Google Search
def ACT_DT_SH = json.data.report.campaignSearch.data.'google search'
log.info( ACT_DT_SH )

if (ACT_DT_SH != null)

assert true: "The Google Search value is present"

else

assert false: "The Google Search value is not present"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Search - Data - Yahoo Search">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion - Campaign Search - Data - Yahoo Search
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign Search Method - Get Campaign Search Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Search - Data - Yahoo Search
def ACT_DT_YSH = json.data.report.campaignSearch.data.'yahoo search'
log.info( ACT_DT_YSH )

if (ACT_DT_YSH != null)

assert true: "The Yahoo Search value is present"

else

assert false: "The Yahoo Search value is not present"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Campaign Search - Date Wise TestCase" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Campaign Search - Date Wise Method - Campaign Search - Date Wise Request">
        <con:settings/>
        <con:config service="Report Service" resourcePath="/REST/report/campaignSearch/{param0}" methodName="Campaign Search - Date Wise Method" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Campaign Search - Date Wise Method - Campaign Search - Date Wise Request" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
            </con:settings>
            <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
            <con:request/>
            <con:assertion type="Simple Contains" name="Contains">
              <con:configuration>
                <token>"status":"SUCCESS"</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400,401,402,404</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Sensitive Information Exposure" name="Sensitive Information Exposure">
              <con:configuration>
                <AssertionSpecificExposureList>Authorization###${#Project#Auth}</AssertionSpecificExposureList>
                <IncludeProjectSpecific>true</IncludeProjectSpecific>
                <IncludeGlobal>true</IncludeGlobal>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200,201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Search Date Wise - Total Count" disabled="true">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion - Campaign Search Date Wise - Total Count
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Campaign Search - Date Wise Method - Campaign Search - Date Wise Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Search Date Wise - Total Count
def ACT_CS = json.data.report.campaignSearch.totalCount
log.info( ACT_CS )

//Expected Campaign Search Date Wise - Total Count
EXP_CS = 485

if (ACT_CS == EXP_CS)

assert true: "The Campaign Search Date Wise - Total Count value is present"

else

assert false: "The Campaign Search Date Wise - Total Count value is not present"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Search Date Wise - Data">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion - Campaign Search Date Wise - Data
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Campaign Search - Date Wise Method - Campaign Search - Date Wise Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Search Date Wise - Data
def ACT_DT = json.data.report.campaignSearch.data
log.info( ACT_DT )

if (ACT_DT != null)

assert true: "The Data value is present"

else

assert false: "The Data value is not present"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Search Date Wise - Data - Google Search" disabled="true">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion - Campaign Search Date Wise - Data - Google Search
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Campaign Search - Date Wise Method - Campaign Search - Date Wise Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Search Date Wise - Data - Google Search
def ACT_DT_SH = json.data.report.campaignSearch.data.'google search'
log.info( ACT_DT_SH )

//Expected Campaign Search Date Wise - Data - Google Search
EXP_DT_SH = 372

if (ACT_DT_SH == EXP_DT_SH)

assert true: "The Google Search value is correct"

else

assert false: "The Google Search value is not correct"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Search Date Wise - Data - Yahoo Search" disabled="true">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion - Campaign Search Date Wise - Data - Yahoo Search
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Campaign Search - Date Wise Method - Campaign Search - Date Wise Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Search Date Wise - Data - Yahoo Search
def ACT_DT_YSH = json.data.report.campaignSearch.data.'yahoo search'
log.info( ACT_DT_YSH )

//Expected Campaign Search Date Wise - Data - Yahoo Search

EXP_DT_YSH = 85

if (ACT_DT_YSH == EXP_DT_YSH)

assert true: "The Yahoo Search value is correct"

else

assert false: "The Yahoo Search value is not correct"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get Campaign Demo Profile TestCase" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Get Campaign Demo Profile Method - Get Campaign Demo Profile Request">
        <con:settings/>
        <con:config service="Report Service" resourcePath="/REST/report/campaignDemoProfile/{param0}" methodName="Get Campaign Demo Profile Method" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get Campaign Demo Profile Method - Get Campaign Demo Profile Request" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
            </con:settings>
            <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
            <con:request/>
            <con:assertion type="Simple Contains" name="Contains">
              <con:configuration>
                <token>"status":"SUCCESS"</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400,401,402,404</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200,201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Sensitive Information Exposure" name="Sensitive Information Exposure">
              <con:configuration>
                <AssertionSpecificExposureList>Authorization###${#Project#Auth}</AssertionSpecificExposureList>
                <IncludeProjectSpecific>true</IncludeProjectSpecific>
                <IncludeGlobal>true</IncludeGlobal>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Demo Profile - Metadata.Age.First">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion - Campaign Demo Profile - Metadata.Age.First
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign Demo Profile Method - Get Campaign Demo Profile Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Demo Profile - Metadata.Age.First
def ACT_CMAF = json.data.report.demoProfile.metaData.age.'100642'
log.info( ACT_CMAF )


//Expected Campaign Demo Profile - Metadata.Age.First
EXP_CMAF = 'Age Range  - 18-20'

if (ACT_CMAF == EXP_CMAF)

assert true: "The Campaign Demo Profile - Metadata.Age.First value is correct"

else

assert false: "The Campaign Demo Profile - Metadata.Age.First value is not correct"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Demo Profile - Metadata.Age.Last">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion - Campaign Demo Profile - Metadata.Age.Last
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign Demo Profile Method - Get Campaign Demo Profile Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Demo Profile - Metadata.Age.Last
def ACT_CMAL = json.data.report.demoProfile.metaData.age.'100654'
log.info( ACT_CMAL )


//Expected Campaign Demo Profile - Metadata.Age.Last
EXP_CMAL = 'Age Range  - 76+'

if (ACT_CMAL == EXP_CMAL)

assert true: "The Campaign Demo Profile - Metadata.Age.Last value is correct"

else

assert false: "The Campaign Demo Profile - Metadata.Age.Last value is not correct"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Demo Profile - Metadata.Gender.100906">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion - Campaign Demo Profile - Metadata.Gender.100906
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign Demo Profile Method - Get Campaign Demo Profile Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Demo Profile - Metadata.Gender.100906
def ACT_CMG1 = json.data.report.demoProfile.metaData.gender.'100906'
log.info( ACT_CMG1 )


//Expected Campaign Demo Profile - Metadata.Gender.100906
EXP_CMG1 = 'Gender - Female'

if (ACT_CMG1 == EXP_CMG1)

assert true: "The Gender is Female"

else

assert false: "The Gender is not Female"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Demo Profile - Metadata.Gender.100907">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion - Campaign Demo Profile - Metadata.Gender.100907
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign Demo Profile Method - Get Campaign Demo Profile Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Demo Profile - Metadata.Gender.100907
def ACT_CMG2 = json.data.report.demoProfile.metaData.gender.'100907'
log.info( ACT_CMG2 )


//Expected Campaign Demo Profile - Metadata.Gender.100907
EXP_CMG2 = 'Gender - Male'

if (ACT_CMG2 == EXP_CMG2)

assert true: "The Gender is Male"

else

assert false: "The Gender is not Male"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Demo Profile - Metadata.Income.First">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion - Campaign Demo Profile - Metadata.Income.First
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign Demo Profile Method - Get Campaign Demo Profile Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Demo Profile - Metadata.Income.First
def ACT_CMIF = json.data.report.demoProfile.metaData.income.'100541'
log.info( ACT_CMIF )

//Expected Campaign Demo Profile - Metadata.Income.First
EXP_CMIF = "Estimated Household Income - Less than \$15,000"

if (ACT_CMIF == EXP_CMIF)

assert true: "Estimated Household Income - Less than 15,000"

else

assert false: "Estimated Household Income - Greater than 15,000"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Demo Profile - Metadata.Income.Last">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion - Campaign Demo Profile - Metadata.Income.Last
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign Demo Profile Method - Get Campaign Demo Profile Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Demo Profile - Metadata.Income.Last
def ACT_CMIL = json.data.report.demoProfile.metaData.income.'100555'
log.info( ACT_CMIL )

//Expected Campaign Demo Profile - Metadata.Income.Last
EXP_CMIL = "Estimated Household Income - \$500,000+"

if (ACT_CMIL == EXP_CMIL)

assert true: "Estimated Household Income - Greater than 500,000"

else

assert false: "Estimated Household Income - Less than 500,000"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get Campaign Social Channel TestCase" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Get Campaign Social Channel Method - Get Campaign Social Channel Request">
        <con:settings/>
        <con:config service="Report Service" resourcePath="/REST/report/campaignSocialChannel/{param0}" methodName="Get Campaign Social Channel Method" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get Campaign Social Channel Method - Get Campaign Social Channel Request" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
            </con:settings>
            <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
            <con:request/>
            <con:assertion type="Simple Contains" name="Contains">
              <con:configuration>
                <token>"status":"SUCCESS"</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400,401,402,404</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Sensitive Information Exposure" name="Sensitive Information Exposure">
              <con:configuration>
                <AssertionSpecificExposureList>Authorization###${#Project#Auth}</AssertionSpecificExposureList>
                <IncludeProjectSpecific>true</IncludeProjectSpecific>
                <IncludeGlobal>true</IncludeGlobal>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200,201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Social Channel - Total Count">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion - Campaign Social Channel - Total Count
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign Social Channel Method - Get Campaign Social Channel Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Social Channel - Total Count
def ACT_CS = json.data.report.campaignSocialChannel.totalCount
log.info( ACT_CS )

if (ACT_CS != null)

assert true: "The Campaign Social Channel - Total Count value is present"

else

assert false: "The  Campaign Social Channel - Total Count value is not present"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Social Channel - Data Length">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion - Campaign Social Channel - Data Length
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign Social Channel Method - Get Campaign Social Channel Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Social Channel - Data Length
def ACT_DT = json.data.report.campaignSocialChannel.data.size();
log.info( ACT_DT )

if (ACT_DT != null)

assert true: "The Campaign Social Channel - Data has value"

else

assert false: "The  Campaign Social Channel - Total Count does not have any value"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Social Channel - Data - Facebook">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion - Campaign Social Channel - Data - Facebook
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign Social Channel Method - Get Campaign Social Channel Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Social Channel - Data - Facebook
def ACT_FB = json.data.report.campaignSocialChannel.data.facebook
log.info( ACT_FB )

if (ACT_FB != null)

assert true: "The Campaign Social Channel - Data - Facebook value is present"

else

assert false: "The  Campaign Social Channel - Data - Facebook value is not present"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Social Channel - Data - Twitter">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion - Campaign Social Channel - Data - Twitter
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign Social Channel Method - Get Campaign Social Channel Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Social Channel - Data - Facebook
def ACT_TW = json.data.report.campaignSocialChannel.data.twitter
log.info( ACT_TW )

if (ACT_TW != null)

assert true: "The Campaign Social Channel - Data - Twitter value is present"

else

assert false: "The Campaign Social Channel - Data - Twitter value is not present"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Campaign Social Channel - Date Wise TestCase" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Get Campaign Social Channel - Date Wise Method - Get Campaign Social Channel - Date Wise Request">
        <con:settings/>
        <con:config service="Report Service" resourcePath="/REST/report/campaignSocialChannel/{param0}" methodName="Campaign Social Channel - Date Wise Method" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get Campaign Social Channel - Date Wise Method - Get Campaign Social Channel - Date Wise Request" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
            </con:settings>
            <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
            <con:request/>
            <con:assertion type="Simple Contains" name="Contains">
              <con:configuration>
                <token>"status":"SUCCESS"</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400,401,402,404</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Sensitive Information Exposure" name="Sensitive Information Exposure">
              <con:configuration>
                <AssertionSpecificExposureList>Authorization###${#Project#Auth}</AssertionSpecificExposureList>
                <IncludeProjectSpecific>true</IncludeProjectSpecific>
                <IncludeGlobal>true</IncludeGlobal>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200,201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Social Channel - Date Wise - Total Count" disabled="true">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion - Campaign Social Channel - Date Wise - Total Count
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign Social Channel - Date Wise Method - Get Campaign Social Channel - Date Wise Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Social Channel - Date Wise - Total Count
def ACT_CSC = json.data.report.campaignSocialChannel.totalCount
log.info( ACT_CSC )

//Expected Campaign Social Channel - Date Wise - Total Count
EXP_CSC = 61

if (ACT_CSC == EXP_CSC)

assert true: "The Campaign Social Channel - Date Wise - Total Count value is correct"

else

assert false: "The Campaign Social Channel - Date Wise - Total Count value is not correct"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Social Channel - Date Wise - Data">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion - Campaign Social Channel - Date Wise - Data
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign Social Channel - Date Wise Method - Get Campaign Social Channel - Date Wise Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Search Date Wise - Data
def ACT_DT = json.data.report.campaignSocialChannel.data
log.info( ACT_DT )

if (ACT_DT != null)

assert true: "The Campaign Social Channel - Date Wise - Data value is present"

else

assert false: "TheCampaign Social Channel - Date Wise - Data value is not present"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Social Channel - Date Wise - Data - Facebook" disabled="true">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion - Campaign Social Channel - Date Wise - Data - Facebook
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign Social Channel - Date Wise Method - Get Campaign Social Channel - Date Wise Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Social Channel - Date Wise - Data - Facebook
def ACT_DT_FB = json.data.report.campaignSocialChannel.data.facebook
log.info( ACT_DT_FB )

//Expected Campaign Social Channel - Date Wise - Data - Facebook
EXP_DT_FB = 17
if (ACT_DT_FB == EXP_DT_FB)

assert true: "TheCampaign Social Channel - Date Wise - Data - Facebook value is present"

else

assert false: "The Campaign Social Channel - Date Wise - Data - Facebook value is not present"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Social Channel - Date Wise - Data - Tumblr" disabled="true">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion - Campaign Social Channel - Date Wise - Data - Tumblr
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign Social Channel - Date Wise Method - Get Campaign Social Channel - Date Wise Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Social Channel - Date Wise - Data - Tumblr
def ACT_DT_TW = json.data.report.campaignSocialChannel.data.tumblr
log.info( ACT_DT_TW )

//Expected Campaign Social Channel - Date Wise - Data - Tumblr
EXP_DT_TW = 5

if (ACT_DT_TW == EXP_DT_TW)

assert true: "The Campaign Social Channel - Date Wise - Data - Tumblr value is present"

else

assert false: "The Campaign Social Channel - Date Wise - Data - Tumblr value is not present"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get Campaign LifeStyle Profile TestCase" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Get Campaign LifeStyle Profile Method - Get Campaign LifeStyle Profile Request">
        <con:settings/>
        <con:config service="Report Service" resourcePath="/REST/report/campaignLifeStyleProfile/{param0}" methodName="Get Campaign LifeStyle Profile Method" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get Campaign LifeStyle Profile Method - Get Campaign LifeStyle Profile Request" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
            </con:settings>
            <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
            <con:request/>
            <con:assertion type="Simple Contains" name="Contains">
              <con:configuration>
                <token>"status":"SUCCESS"</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400,401,402,404</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Sensitive Information Exposure" name="Sensitive Information Exposure">
              <con:configuration>
                <AssertionSpecificExposureList>Authorization###${#Project#Auth}</AssertionSpecificExposureList>
                <IncludeProjectSpecific>true</IncludeProjectSpecific>
                <IncludeGlobal>true</IncludeGlobal>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200,201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign LifeStyle Profile - Child Node Check">
              <con:configuration>
                <scriptText><![CDATA[//*******************************************************************************************************************************************
//Script Assertion - Campaign LifeStyle Profile - Child Node Check
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign LifeStyle Profile Method - Get Campaign LifeStyle Profile Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign LifeStyle Profile - child node check
def ACT_CMLPCN = json.data.report.lifeStyleProfile
log.info( ACT_CMLPCN )

if (ACT_CMLPCN.grep('clickerData=[]') && ACT_CMLPCN.grep('viewerData=[]' ) && ACT_CMLPCN.grep('totalCategoryClickerCount=0' ) && ACT_CMLPCN.grep('totalCategoryViewerCount=0' ) )
	assert true: "Campaign LifeStyle Profile has child nodes"
else
	assert false: "Campaign LifeStyle Profile does not have child nodes"]]></scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign LifeStyle Profile - MetaData Node Check">
              <con:configuration>
                <scriptText><![CDATA[//*******************************************************************************************************************************************
//Script Assertion - Campaign LifeStyle Profile - MetaData Node Check
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign LifeStyle Profile Method - Get Campaign LifeStyle Profile Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign LifeStyle Profile - MetaData Node Check
def ACT_CMLPMN = json.data.report.lifeStyleProfile.metaData
log.info( ACT_CMLPMN )

if (ACT_CMLPMN.grep('100349=Foodies') && ACT_CMLPMN.grep('100348=Fashionistas' ) && ACT_CMLPMN.grep('100380=Working-class families' ) && ACT_CMLPMN.grep('100362=Moms of grade school kids' ) )

	assert true: "Campaign LifeStyle Profile - MetaData node has child nodes"

else

	assert false: "Campaign LifeStyle Profile - MetaData node does not have child nodes"]]></scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign LifeStyle Profile - MetaData.100351">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion - Campaign LifeStyle Profile - MetaData.100351
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign LifeStyle Profile Method - Get Campaign LifeStyle Profile Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign LifeStyle Profile - MetaData.100351
def ACT_CMLPMD = json.data.report.lifeStyleProfile.metaData.'100351'
log.info( ACT_CMLPMD )

//Expected Campaign LifeStyle Profile - MetaData.100351
EXP_CMLPMD = 'Gamers'

if (ACT_CMLPMD == EXP_CMLPMD)

	assert true: "Campaign LifeStyle Profile - MetaData.100351 has correct value"

else

	assert false: "Campaign LifeStyle Profile - MetaData.100351 does not have correct value"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign LifeStyle Profile - MetaData.100376">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion - Campaign LifeStyle Profile - MetaData.100376
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign LifeStyle Profile Method - Get Campaign LifeStyle Profile Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign LifeStyle Profile - MetaData.100376
def ACT_CMLPMD1 = json.data.report.lifeStyleProfile.metaData.'100376'
log.info( ACT_CMLPMD1 )

//Expected Campaign LifeStyle Profile - MetaData.100376
EXP_CMLPMD1 = 'Spa Mavens'

if (ACT_CMLPMD1 == EXP_CMLPMD1)

	assert true: "Campaign LifeStyle Profile - MetaData.100376 has correct value"

else

	assert false: "Campaign LifeStyle Profile - MetaData.100376 does not have correct value"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get Campaign Vertical - Date Wise TestCase" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Get Campaign Vertical - Date Wise Method - Get Campaign Vertical - Date Wise Request">
        <con:settings/>
        <con:config service="Report Service" resourcePath="/REST/report/campaignVertical/{param0}" methodName="Get Campaign Vertical - Date Wise Method" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get Campaign Vertical - Date Wise Method - Get Campaign Vertical - Date Wise Request" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
            </con:settings>
            <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
            <con:request/>
            <con:assertion type="Simple Contains" name="Contains">
              <con:configuration>
                <token>"status":"SUCCESS"</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400,401,402,404</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Sensitive Information Exposure" name="Sensitive Information Exposure">
              <con:configuration>
                <AssertionSpecificExposureList>Authorization###${#Project#Auth}</AssertionSpecificExposureList>
                <IncludeProjectSpecific>true</IncludeProjectSpecific>
                <IncludeGlobal>true</IncludeGlobal>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200,201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Vertical Date Wise - Total Count" disabled="true">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion - Campaign Vertical Date Wise - Total Count
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign Vertical - Date Wise Method - Get Campaign Vertical - Date Wise Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Vertical Date Wise - Total Count
def ACT_CV = json.data.report.campaignVertical.totalCount
log.info( ACT_CV )

//Expected Campaign Vertical Date Wise - Total Count
EXP_CV = 52860289

if (ACT_CV == EXP_CV)

assert true: "The Campaign Vertical Date Wise - Total Count value is present"

else

assert false: "The Campaign Vertical Date Wise - Total Count value is not present"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Vertical Date Wise - Data Length" disabled="true">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion - Campaign Vertical Date Wise - Data Length
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign Vertical - Date Wise Method - Get Campaign Vertical - Date Wise Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Vertical Date Wise - Data Length
def ACT_CVDL = json.data.report.campaignVertical.data.size()
log.info( ACT_CVDL )

//Expected Campaign Vertical Date Wise - Data Length
EXP_CVDL = 41

if (ACT_CVDL == EXP_CVDL)

assert true: "The Campaign Vertical Date Wise - Data Length value is present"

else

assert false: "The Campaign Vertical Date Wise - Data Length value is not present"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Vertical Date Wise - Data.1" disabled="true">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion - Campaign Vertical Date Wise - Data.1
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign Vertical - Date Wise Method - Get Campaign Vertical - Date Wise Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Vertical Date Wise - Data.1
def ACT_CVD1 = json.data.report.campaignVertical.data.'1'
log.info( ACT_CVD1 )

//Expected Campaign Vertical Date Wise - Data.1
EXP_CVD1 = 1474433

if (ACT_CVD1 == EXP_CVD1)

assert true: "The Campaign Vertical Date Wise - Data.1 value is present"

else

assert false: "The Campaign Vertical Date Wise - Data.1 value is not present"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Campaign Vertical Date Wise - Data.114" disabled="true">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion - Campaign Vertical Date Wise - Data.114
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get Campaign Vertical - Date Wise Method - Get Campaign Vertical - Date Wise Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

//Get Actual Campaign Vertical Date Wise - Data.114
def ACT_CVD1 = json.data.report.campaignVertical.data.'114'
log.info( ACT_CVD1 )

//Expected Campaign Vertical Date Wise - Data.114
EXP_CVD1 = 2071

if (ACT_CVD1 == EXP_CVD1)

assert true: "The Campaign Vertical Date Wise - Data.114 value is present"

else

assert false: "The Campaign Vertical Date Wise - Data.114 value is not present"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:properties/>
  </con:testSuite>
  <con:testSuite name="Taxonomy ServiceTestSuite">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get STX - Index TestCase" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Get STX - Index Method - Get STX - Index Request">
        <con:settings/>
        <con:config service="Taxonomy Service" resourcePath="/REST/taxonomy/stx/1420,2038" methodName="Get STX - Index Method" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get STX - Index Method - Get STX - Index Request" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
            </con:settings>
            <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
            <con:request/>
            <con:assertion type="Simple Contains" name="Contains">
              <con:configuration>
                <token>"status":"SUCCESS"</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400,401,402,404</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Sensitive Information Exposure" name="Sensitive Information Exposure">
              <con:configuration>
                <AssertionSpecificExposureList>Authorization###${#Project#Auth}</AssertionSpecificExposureList>
                <IncludeProjectSpecific>true</IncludeProjectSpecific>
                <IncludeGlobal>true</IncludeGlobal>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200,201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - ShareThis Exchange Service.ID">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion - ShareThis Exchange Service.ID
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get STX - Index Method - Get STX - Index Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

// Get ShareThis Exchange Service.ID length
def LT = json.data.taxonomy.stx.size()
log.info(LT)

while(LT>0)
{
LT--
//Get Actual ShareThis Exchange Service.ID
def ACT_SES_ID = json.data.taxonomy.stx[LT].'sharethis_taxonomy_id'
log.info( ACT_SES_ID )

//Checking if the IDs paased in the API URL are correct
if(ACT_SES_ID == '2038' || ACT_SES_ID == '1420')
{
assert true: "Id is: " + ACT_SES_ID
log.info("abc")
}
else
{
assert false: "Id is: 100"
log.info("xyz")
}
}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Sharethis_Taxonomy_Id - 1420">
              <con:configuration>
                <scriptText><![CDATA[//*******************************************************************************************************************************************
//Script Assertion - Sharethis_Taxonomy_Id - 1420
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get STX - Index Method - Get STX - Index Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

// Get Sharethis_Taxonomy_Id - 1420
def ST_ID1 = json.data.taxonomy.stx[0]
log.info(ST_ID1)

if (ST_ID1.grep('sharethis_taxonomy_id=1420') && ST_ID1.grep('cat_label_2=Appliance') && ST_ID1.grep('cat_label_1=Home & Garden') && ST_ID1.grep('cat_label_3=')  && ST_ID1.grep('cat_label_4=') )
	
	assert true: "Sharethis_Taxonomy_Id - 1420 node has correct values"

else

	assert false: "Sharethis_Taxonomy_Id - 1420 node does not have correct values"]]></scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - Sharethis_Taxonomy_Id - 2038">
              <con:configuration>
                <scriptText><![CDATA[//*******************************************************************************************************************************************
//Script Assertion - Sharethis_Taxonomy_Id - 2038
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get STX - Index Method - Get STX - Index Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

// Get Sharethis_Taxonomy_Id - 2038
def ST_ID2 = json.data.taxonomy.stx[1]
log.info(ST_ID2)

if (ST_ID2.grep('sharethis_taxonomy_id=2038') && ST_ID2.grep('cat_label_1=Electronics & Technology') && ST_ID2.grep('cat_label_2= Computers') && ST_ID2.grep('cat_label_3=')  && ST_ID2.grep('cat_label_4=') )
	
	assert true: "Sharethis_Taxonomy_Id - 2038 node has correct values"

else

	assert false: "Sharethis_Taxonomy_Id - 2038 node does not have correct values"]]></scriptText>
              </con:configuration>
            </con:assertion>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get L99 TestCase" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Get L99 Method - Get L99 Request">
        <con:settings/>
        <con:config service="Taxonomy Service" resourcePath="/REST/taxonomy/l99/" methodName="Get L99 Method" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get L99 Method - Get L99 Request" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
            </con:settings>
            <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
            <con:request/>
            <con:assertion type="Simple Contains" name="Contains">
              <con:configuration>
                <token>"status":"SUCCESS"</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400,401,402,404</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Sensitive Information Exposure" name="Sensitive Information Exposure">
              <con:configuration>
                <AssertionSpecificExposureList>Authorization###${#Project#Auth}</AssertionSpecificExposureList>
                <IncludeProjectSpecific>true</IncludeProjectSpecific>
                <IncludeGlobal>true</IncludeGlobal>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200,201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion -ShareThis L99 Service Length">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion -ShareThis L99 Service Length
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get L99 Method - Get L99 Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

// Get ShareThis L99 Service Length
def LT = json.data.taxonomy.l99.size()
log.info(LT)

if (LT == 50)

assert true: "ShareThis L99 Service length is 50"

else

assert fales: "ShareThis L99 Service length is not 50"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion -ShareThis L99 Service Node - 0">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion -ShareThis L99 Service Node - 0
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get L99 Method - Get L99 Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

// Get Script Assertion -ShareThis L99 Service Node - 0
def L0 = json.data.taxonomy.l99[0]
log.info(L0)

if (L0.grep('categoryId=1') &amp;&amp; L0.grep('categoryName=business') &amp;&amp; L0.grep('displayName=Business'))
	
	assert true: "ShareThis L99 Service Node - 0  has correct values"

else

	assert false: "ShareThis L99 Service Node - 0  does not have correct values"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion -ShareThis L99 Service Node - 29">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion -ShareThis L99 Service Node - 29
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get L99 Method - Get L99 Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

// Get Script Assertion -ShareThis L99 Service Node - 29
def L29 = json.data.taxonomy.l99[29]
log.info(L29)

if (L29.grep('categoryId=31') &amp;&amp; L29.grep('displayName=Envionment (Green)')&amp;&amp; L29.grep('categoryName=science/environmental_green ') )
	
	assert true: "ShareThis L99 Service Node - 29  has correct values"

else

	assert false: "ShareThis L99 Service Node - 29  does not have correct values"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion -ShareThis L99 Service Node - 30">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion -ShareThis L99 Service Node - 30
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get L99 Method - Get L99 Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

// Get Script Assertion -ShareThis L99 Service Node - 30
def L30 = json.data.taxonomy.l99[30]
log.info(L30)


if (L30.grep('categoryId=101') &amp;&amp; L30.grep('displayName=News')&amp;&amp; L30.grep('categoryName=News/Media') )
	
	assert true: "ShareThis L99 Service Node - 30  has correct values"

else

	assert false: "ShareThis L99 Service Node - 30  does not have correct values"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion -ShareThis L99 Service Node - 49">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion -ShareThis L99 Service Node - 49
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get L99 Method - Get L99 Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

// Get Script Assertion -ShareThis L99 Service Node - 49
def L49 = json.data.taxonomy.l99[49]
log.info(L49)


if (L49.grep('categoryId=126') &amp;&amp; L49.grep('displayName=Television')&amp;&amp; L49.grep('categoryName=Television') )
	
	assert true: "ShareThis L99 Service Node - 30  has correct values"

else

	assert false: "ShareThis L99 Service Node - 30  does not have correct values"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get L99 - Index TestCase" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Get L99 - Index Method - Get L99 - Index Request">
        <con:settings/>
        <con:config service="Taxonomy Service" resourcePath="/REST/taxonomy/l99/1,101" methodName="Get L99 - Index Method" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get L99 - Index Method - Get L99 - Index Request" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
            </con:settings>
            <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
            <con:request/>
            <con:assertion type="Simple Contains" name="Contains">
              <con:configuration>
                <token>"status":"SUCCESS"</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400,401,402,404</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Sensitive Information Exposure" name="Sensitive Information Exposure">
              <con:configuration>
                <AssertionSpecificExposureList>Authorization###${#Project#Auth}</AssertionSpecificExposureList>
                <IncludeProjectSpecific>true</IncludeProjectSpecific>
                <IncludeGlobal>true</IncludeGlobal>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200,201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion -ShareThis L99 Service - Index Length">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion -ShareThis L99 Service - Index Length
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get L99 - Index Method - Get L99 - Index Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

// Get ShareThis L99 Service - Index Length
def LT = json.data.taxonomy.l99.size()
log.info(LT)

if (LT == 2)

assert true: "ShareThis L99 Service - Index Length is 2"

else

assert fales: "ShareThis L99 Service - Index Length is not 2"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion -ShareThis L99 Service - Index Node - 0">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion -ShareThis L99 Service - Index Node - 0
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get L99 - Index Method - Get L99 - Index Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

// Get ShareThis L99 Service - Index Node - 0
def L0 = json.data.taxonomy.l99[0]
log.info(L0)

if (L0.grep('categoryId=1') &amp;&amp; L0.grep('categoryName=business') &amp;&amp; L0.grep('displayName=Business'))
	
	assert true: "ShareThis L99 Service - Index Node - 0  has correct values"

else

	assert false: "ShareThis L99 Service - Index Node - 0  does not have correct values"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion -ShareThis L99 Service - Index Node - 1">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion -ShareThis L99 Service - Index Node - 1
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get L99 - Index Method - Get L99 - Index Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

// Get ShareThis L99 Service - Index Node - 1
def L1 = json.data.taxonomy.l99[1]
log.info(L1)

if (L1.grep('categoryId=101') &amp;&amp; L1.grep('categoryName=News/Media') &amp;&amp; L1.grep('displayName=News'))
	
	assert true: "ShareThis L99 Service - Index Node - 1  has correct values"

else

	assert false: "ShareThis L99 Service - Index Node - 1  does not have correct values"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion -ShareThis L99  Service  -  Index check">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion -ShareThis L99  Service  -  Index check
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get L99 - Index Method - Get L99 - Index Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

// Get ShareThis L99  Service  -  Index check - 0
def CID0 = json.data.taxonomy.l99[0].categoryId
log.info(CID0)

EXP_CID0 = '1'

// Get ShareThis L99  Service  -  Index check - 1
def CID1 = json.data.taxonomy.l99[1].categoryId
log.info(CID1)

EXP_CID1 = '101'

if (CID0 == EXP_CID0 &amp;&amp; CID1 == EXP_CID1)

assert true: "ShareThis L99 Service  - Index is 1 &amp; 101"

else

assert fales: "ShareThis L99 Service  - Index is not 1 &amp; 101"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get DLX - Index TestCase" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Get DLX - Index Method - Get DLX - Index Request">
        <con:settings/>
        <con:config service="Taxonomy Service" resourcePath="/REST/taxonomy/dlx/100000,100001" methodName="Get DLX - Index Method" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get DLX - Index Method - Get DLX - Index Request" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
            </con:settings>
            <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
            <con:request/>
            <con:assertion type="Simple Contains" name="Contains">
              <con:configuration>
                <token>"status":"SUCCESS"</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400,401,402,404</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Sensitive Information Exposure" name="Sensitive Information Exposure">
              <con:configuration>
                <AssertionSpecificExposureList>Authorization###${#Project#Auth}</AssertionSpecificExposureList>
                <IncludeProjectSpecific>true</IncludeProjectSpecific>
                <IncludeGlobal>true</IncludeGlobal>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200,201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion -ShareThis DLX Service - Index Length">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion -ShareThis DLX Service - Index Length
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get DLX - Index Method - Get DLX - Index Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

// Get ShareThis DLX Service - Index Length
def DLX = json.data.taxonomy.dlx.size()
log.info(DLX)

if (DLX == 2)

assert true: "ShareThis DLX Service - Index Length is 2"

else

assert fales: "ShareThis DLX Service - Index Length is not 2"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion -ShareThis DLX Service - Index Node - 0">
              <con:configuration>
                <scriptText><![CDATA[//*******************************************************************************************************************************************
//Script Assertion -ShareThis DLX Service - Index Node - 0
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get DLX - Index Method - Get DLX - Index Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

// Get ShareThis DLX Service - Index Node - 0
def DLX0 = json.data.taxonomy.dlx[0]
log.info(DLX0)

if (DLX0.grep('id=100000') && DLX0.grep('segment=Auto Parts Buyer') && DLX0.grep('parentSegment=Aftermarket') && DLX0.grep('code=TA1533') && DLX0.grep('type=DLX Polk Auto') && DLX0.grep('dlxSegmentName=Aftermarket: Auto Parts Buyer'))
	
	assert true: "ShareThis DLX Service - Index Node - 0  has correct values"

else

	assert false: "ShareThis DLX Service - Index Node - 0  does not have correct values"]]></scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion -ShareThis DLX Service - Index Node - 1">
              <con:configuration>
                <scriptText><![CDATA[//*******************************************************************************************************************************************
//Script Assertion -ShareThis DLX Service - Index Node - 1
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get DLX - Index Method - Get DLX - Index Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

// Get ShareThis DLX Service - Index Node - 1
def DLX1 = json.data.taxonomy.dlx[1]
log.info(DLX1)

if (DLX1.grep('id=100001') && DLX1.grep('segment=Auto Service Buyer') && DLX1.grep('parentSegment=Aftermarket') && DLX1.grep('code=TA1534') && DLX1.grep('type=DLX Polk Auto') && DLX1.grep('dlxSegmentName=Aftermarket: Auto Service Buyer'))
	
	assert true: "ShareThis DLX Service - Index Node - 1  has correct values"

else

	assert false: "ShareThis DLX Service - Index Node - 1  does not have correct values"]]></scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion -ShareThis DLX  Service  -  Index check">
              <con:configuration>
                <scriptText>//*******************************************************************************************************************************************
//Script Assertion -ShareThis DLX  Service  -  Index check
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get DLX - Index Method - Get DLX - Index Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

// Get ShareThis DLX  Service  -  Index check - 0
def ID0 = json.data.taxonomy.dlx[0].id
log.info(ID0)

EXP_ID0 = '100000'

// Get ShareThis DLX  Service  -  Index check - 1
def ID1 = json.data.taxonomy.dlx[1].id
log.info(ID1)

EXP_ID1 = '100001'

if (ID0 == EXP_ID0 &amp;&amp; ID1 == EXP_ID1)

assert true: "ShareThis DLX Service  - Index is 100000 &amp; 100001"

else

assert fales: "ShareThis DLX Service  - Index is not 100000 &amp; 100001"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get STX TestCase" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Get STX Method - Get STX Request">
        <con:settings/>
        <con:config service="Taxonomy Service" resourcePath="/REST/taxonomy/stx/" methodName="Get STX Method" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get STX Method - Get STX Request" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
            </con:settings>
            <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
            <con:request/>
            <con:assertion type="Simple Contains" name="Contains">
              <con:configuration>
                <token>"status":"SUCCESS"</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400,401,402,404</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Sensitive Information Exposure" name="Sensitive Information Exposure">
              <con:configuration>
                <AssertionSpecificExposureList>Authorization###${#Project#Auth}</AssertionSpecificExposureList>
                <IncludeProjectSpecific>true</IncludeProjectSpecific>
                <IncludeGlobal>true</IncludeGlobal>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200,201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - ShareThis Exchange Service.ID - 1001">
              <con:configuration>
                <scriptText><![CDATA[//*******************************************************************************************************************************************
//Script Assertion - ShareThis Exchange Service.ID - 1001
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get STX Method - Get STX Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

// Get ShareThis Exchange Service.ID - 1001
def STX0 = json.data.taxonomy.stx[0]
log.info(STX0)

if (STX0.grep('sharethis_taxonomy_id=1001') && STX0.grep('cat_label_4=') && STX0.grep('cat_label_1=Art_Entertainment') && STX0.grep('cat_label_3=') && STX0.grep('cat_label_2=Book_and_Literature'))

assert true: " ShareThis Exchange Service.ID - 1001 has correct values"

else

assert false: " ShareThis Exchange Service.ID - 1001 does nor have correct values"]]></scriptText>
              </con:configuration>
            </con:assertion>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get DLX - TestCase" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Get DLX - Method - Get DLX - Request">
        <con:settings/>
        <con:config service="Taxonomy Service" resourcePath="/REST/taxonomy/dlx/" methodName="Get DLX - Method" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get DLX - Method - Get DLX - Request" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#Auth}"/>
  &lt;con:entry key="Accept" value="text/json"/>
&lt;/xml-fragment></con:setting>
            </con:settings>
            <con:endpoint>http://adops1007.qa.sharethis.com/</con:endpoint>
            <con:request/>
            <con:assertion type="Simple Contains" name="Contains">
              <con:configuration>
                <token>"status":"SUCCESS"</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400,401,402,404</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Sensitive Information Exposure" name="Sensitive Information Exposure">
              <con:configuration>
                <AssertionSpecificExposureList>Authorization###${#Project#Auth}</AssertionSpecificExposureList>
                <IncludeProjectSpecific>true</IncludeProjectSpecific>
                <IncludeGlobal>true</IncludeGlobal>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200,201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Script Assertion - ShareThis DLX Service.id - 100000">
              <con:configuration>
                <scriptText><![CDATA[//*******************************************************************************************************************************************
//Script Assertion - ShareThis DLX Service.id - 100000
//*******************************************************************************************************************************************
import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

//Expanding response in string
def response = context.expand( '${Get DLX - Method - Get DLX - Request#Response}' ).toString()

def slurper = new JsonSlurper()

// Parsing text response to JSON format
def json = slurper.parseText response

// Get ShareThis DLX Service.id - 100000
def DLX0 = json.data.taxonomy.dlx[0]
log.info(DLX0)


if (DLX0.grep('id=100000') && DLX0.grep('segment=Auto Parts Buyer') && DLX0.grep('parentSegment=Aftermarket') && DLX0.grep('code=TA1533') && DLX0.grep('type=DLX Polk Auto') && DLX0.grep('dlxSegmentName=Aftermarket: Auto Parts Buyer'))

assert true: " ShareThis DLX Service.id - 100000 has correct values"

else

assert false: " ShareThis DLX Service.id - 100000 does nor have correct values"]]></scriptText>
              </con:configuration>
            </con:assertion>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:properties/>
  </con:testSuite>
  <con:properties>
    <con:property>
      <con:name>Auth</con:name>
      <con:value>sharethis_admin</con:value>
    </con:property>
  </con:properties>
  <con:wssContainer/>
  <con:oAuth2ProfileContainer/><con:sensitiveInformation/>
</con:soapui-project>